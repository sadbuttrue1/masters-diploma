(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590115,      11256]
NotebookOptionsPosition[    588592,      11206]
NotebookOutlinePosition[    588948,      11222]
CellTagsIndexPosition[    588905,      11219]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"fontName", "=", "\"\<Times\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.002", "]"}], ",", "13", ",", "fontName"}],
       "]"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"GridLinesStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.001", "]"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"FontFamily", "\[Rule]", "fontName"}], ")"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ";", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.704048095654065*^9, 3.704048111343761*^9}, 
   3.7040482474061537`*^9, {3.7046415595774927`*^9, 3.704641568509088*^9}, {
   3.7046422307209044`*^9, 3.704642235196884*^9}, {3.7048026014362803`*^9, 
   3.704802601872793*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "d"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"l", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", "=", 
   RowBox[{"-", "L2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "a"], "=", 
   RowBox[{"L1", "-", "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "b"], "=", 
   RowBox[{"-", "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "c"], "=", 
   RowBox[{"L2", "-", "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "a"], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["R", "a"], ".", 
      SubscriptBox["R", "a"]}], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "b"], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["R", "b"], ".", 
      SubscriptBox["R", "b"]}], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "c"], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["R", "c"], ".", 
      SubscriptBox["R", "c"]}], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704046951061146*^9, 3.704046978263829*^9}, {
  3.704048169978747*^9, 3.704048176998706*^9}, {3.704803212005309*^9, 
  3.7048032297687473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["r", "ba"], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "l"}], ",", "0"}], " ", "}"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "bb"], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "bc"], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{"l", ",", "0"}], " ", "}"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{
    SubscriptBox["k", "c"], 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"1", "/", "R1"}], 
        RowBox[{"1", "/", 
         SubscriptBox["r", "a"]}], 
        RowBox[{"1", "/", 
         SubscriptBox["r", "b"]}], 
        RowBox[{"1", "/", 
         SubscriptBox["r", "c"]}]},
       {
        RowBox[{"1", "/", 
         SubscriptBox["r", "a"]}], 
        RowBox[{"1", "/", "R2a"}], 
        RowBox[{"1", "/", "l"}], 
        RowBox[{
         RowBox[{"1", "/", "2"}], "l"}]},
       {
        RowBox[{"1", "/", 
         SubscriptBox["r", "b"]}], 
        RowBox[{"1", "/", "l"}], 
        RowBox[{"1", "/", "R2b"}], 
        RowBox[{"1", "/", "l"}]},
       {
        RowBox[{"1", "/", 
         SubscriptBox["r", "c"]}], 
        RowBox[{
         RowBox[{"1", "/", "2"}], "l"}], 
        RowBox[{"1", "/", "l"}], 
        RowBox[{"1", "/", "R2c"}]}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm1", "=", 
   RowBox[{"Inverse", "[", "Cm", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"q10"},
      {"q2a"},
      {"q2b"},
      {"q2c"}
     }], ")"}], "=", 
   RowBox[{"Cm1", ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "\[CapitalPhi]"}]},
       {"\[CapitalPhi]"},
       {"\[CapitalPhi]"},
       {"\[CapitalPhi]"}
      }], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704046980364995*^9, {3.70404701552675*^9, 3.7040470381043797`*^9}, {
   3.70404768899804*^9, 3.704047689751597*^9}, 3.7040481662223673`*^9, {
   3.7041225123405533`*^9, 3.704122512733076*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["F", 
    RowBox[{"2", "a"}]], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SubscriptBox["k", "c"], " ", "q10", " ", "q2a"}], 
      SuperscriptBox[
       SubscriptBox["r", "a"], "3"]]}], 
    SubscriptBox["R", "a"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", 
    RowBox[{"2", "b"}]], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SubscriptBox["k", "c"], "q10", " ", "q2b"}], 
      SuperscriptBox[
       SubscriptBox["r", "b"], "3"]]}], 
    SubscriptBox["R", "b"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", 
    RowBox[{"2", "c"}]], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SubscriptBox["k", "c"], " ", "q10", " ", "q2c"}], 
      SuperscriptBox[
       SubscriptBox["r", "c"], "3"]]}], 
    SubscriptBox["R", "c"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qa", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["k", "c"]}], "q2a", " ", "q10"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qc", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["k", "c"]}], "q2c", " ", "q10"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", 
    RowBox[{"2", "a1"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Qa", "[", "t", "]"}], 
      SuperscriptBox[
       SubscriptBox["r", "a"], "3"]], 
     SubscriptBox["R", "a"]}], "//.", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", 
    RowBox[{"2", "c1"}]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Qc", "[", "t", "]"}], 
      SuperscriptBox[
       SubscriptBox["r", "c"], "3"]], 
     SubscriptBox["R", "c"]}], "//.", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704048349015023*^9, 3.7040483519955177`*^9}, {
   3.70404840059758*^9, 3.7040484097317038`*^9}, {3.7040488081157513`*^9, 
   3.704048837129611*^9}, {3.704122480202039*^9, 3.7041224817052517`*^9}, 
   3.704127614367382*^9, {3.704127789826198*^9, 3.704127906196088*^9}, {
   3.704128003961095*^9, 3.704128038521853*^9}, {3.70412827684667*^9, 
   3.704128296938814*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ET", "=", 
   FractionBox[
    RowBox[{"J", " ", 
     SuperscriptBox[
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"]}], "2"]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.704047072687406*^9, 3.704047073822898*^9}, 
   3.704122522273378*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["r", "ba"], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
     SubscriptBox["F", 
      RowBox[{"2", "a"}]]}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["r", "bc"], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
     SubscriptBox["F", 
      RowBox[{"2", "c"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["r", "ba"], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
     SubscriptBox["F", 
      RowBox[{"2", "a1"}]]}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       SubscriptBox["r", "bc"], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], ".", 
     SubscriptBox["F", 
      RowBox[{"2", "c1"}]]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7040476932724752`*^9, {3.7040499409338093`*^9, 3.704049999421843*^9}, 
   3.704122525299821*^9, {3.7041280426398497`*^9, 3.704128064813078*^9}, 
   3.704642377963408*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "15"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=15.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=15.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7040472473894567`*^9, 3.704047250620262*^9}, {
   3.704047490127185*^9, 3.70404755276791*^9}, {3.704047608761189*^9, 
   3.704047613590218*^9}, {3.704047653379834*^9, 3.704047669840857*^9}, {
   3.704047713332273*^9, 3.7040477218702183`*^9}, {3.704047778685089*^9, 
   3.704047957088503*^9}, {3.7040479888505697`*^9, 3.704048085705139*^9}, 
   3.704048229178104*^9, {3.704048369490447*^9, 3.7040483817533484`*^9}, {
   3.704048455757741*^9, 3.704048486053631*^9}, {3.7040485537694473`*^9, 
   3.7040485574587708`*^9}, {3.7040486594209414`*^9, 
   3.7040487170423203`*^9}, {3.704048748387434*^9, 3.704048755429484*^9}, {
   3.704048785434573*^9, 3.7040487926220512`*^9}, {3.704048851991683*^9, 
   3.704048852597924*^9}, {3.704048909423127*^9, 3.704049033501808*^9}, {
   3.704049078345695*^9, 3.704049082575399*^9}, {3.704049113929912*^9, 
   3.704049117292656*^9}, {3.7040496059604177`*^9, 3.704049617557013*^9}, {
   3.704049944847546*^9, 3.7040499463101587`*^9}, {3.704123135125059*^9, 
   3.704123155682773*^9}, {3.704123225299347*^9, 3.704123247395302*^9}, {
   3.704123746422818*^9, 3.704123769258024*^9}, {3.70412406186686*^9, 
   3.7041241190638933`*^9}, {3.704124247136025*^9, 3.704124252850668*^9}, {
   3.704125729086027*^9, 3.7041257556780376`*^9}, {3.704127002658719*^9, 
   3.7041270691130943`*^9}, {3.704127117884646*^9, 3.7041271245543423`*^9}, {
   3.7041273280280323`*^9, 3.704127510095818*^9}, {3.70412757215522*^9, 
   3.7041275740786057`*^9}, {3.7041280764348907`*^9, 3.704128147479858*^9}, {
   3.704128303813751*^9, 3.7041283042178173`*^9}, {3.7041284253049183`*^9, 
   3.704128484975016*^9}, {3.704640133681731*^9, 3.704640160938426*^9}, {
   3.7046402043764057`*^9, 3.704640218359276*^9}, {3.7046402701708603`*^9, 
   3.7046402769959927`*^9}, {3.70464046801374*^9, 3.704640531497099*^9}, {
   3.704640618294304*^9, 3.704640643336195*^9}, {3.704640906996455*^9, 
   3.7046409552508*^9}, {3.704641008327962*^9, 3.704641145761567*^9}, {
   3.704641268490634*^9, 3.704641280191077*^9}, {3.704641574101057*^9, 
   3.70464162822567*^9}, {3.704641715281329*^9, 3.7046417868043823`*^9}, {
   3.7046418899631042`*^9, 3.704641898975209*^9}, {3.704641934334777*^9, 
   3.704641945242744*^9}, {3.7046421786333447`*^9, 3.70464218565201*^9}, 
   3.704642275568398*^9, 3.704642367111195*^9, {3.70464261114715*^9, 
   3.7046426318920107`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
xP9cRiFReEgm9zQT/Q+7cFVa
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
H20giLnpsQ1x8N0TUzvtfrXBmvevVIcOc7CW5A9t6e42EJVNfaR9mYOjAizW
XBJth6/rn/JojzjY0jNs5sSBdjgXAL6MPg4uMXW9e/x4O1T1PjMPH+RgWd0L
46/PtIMGU+6Y5iQH/xhaN2hg0w7J1wb26khz8WZ73PXsQTtsR9uW2e7k4ilz
Xql2VTvsFT8bYh/Exaa7f+sF/G6Hs/9u7ZmI4OIs+Y8Fre3tsC3IG7vHcrFl
y/1MX247zDmhPHtnJhf/NFaIr5XsAG3dWYbM31wctf+ot92JDuhe+tymcjkP
b1Z7tyuhqQOs74imZkTxcE1fGq7t7AClK7J+NS952PZNxp6J3g5IEnt5uS2J
h98o5O43EXaAxARbGefwsIxU6bE5cp1wMcvwRnotD48PN160O9sJmZWO/etn
Evw0q5n2zKITRGo02tbNJVjboc2i4lonrCy2e7dYkuDrffSrCp6dsCtDuzFn
GcGdLWz72uhOkI/3VVDQJPhzyYy72u2dcEEyKO6/swSb3RYVucTshCM5oqfN
zAj+pzvnXginE/Sqy7+tvULwliwJ/56JTtD1LG/2uU5wUoJs6DMFGnh/Pe58
9i7Bey8tl6pQoUFT6576V/cIpskrhPPVaSCl8rLzjz/Bck+VnhrspkGY4o5/
Eo8IDg5Uj/tnRoNF4UypmDiCVfdrKqpa0+BRK8k0ek1wxQzt16ccaZA+/8rg
UCLBU57bkt5706DUfP6pWe8JdrLfl24eT4PY6HL7/R8JlthwQDPkLQ3mrd42
bF1McErvoQ8FmTRYtqp7kXspwQxzw7xFZTRwLD8kaVFJ8CnjsyXlXTS4M1XD
MaknuHTvbL0rLBpsfKd+p7CB4I3a2YUzBTQwEerPWNBE8Mwg/1ZFETpEZT1n
/ddK8LaZF5/zZ9Fh5d3LR5LbCXbw1DYtnUOH4rTxlx87CW61pTeaL6SD0+mB
lVkMgqW68yI3LaaDWobwYCST4APnH56clqGDzDqwsO4l+MORHfVxK+lwsUT1
cgeL4P5yqTAHJTqonE455MMmeKVen+HutXTA0yoKi7mUfhsjqzrU6bBo08LQ
uXwqn29sg99vpsN/TP/1dgKCx+T3HPbaSofZCxZlFQ8SbLmA91V+Fx1M8t/f
0xohOPp+hT8H6JD3cOTnqVGC6yaj93/Sp4OL28dpKyHBeryD5eeP0iEnwkzl
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
Uc2tk9jNB3F6pu1gIxVfB2oWID6cb489od1MkGr4D1rTHur3Q70vWLYSVPuP
xovfz4fyhENtTzsJWlkrvmDrMT4EBLvY7uolaPC/J0uWH6f4jKXZdB9BldsU
5aeN+NDpdcg5i0WQw+utat9PUXpLMgQ9HCr+M6Va6af5oP74qZkNj4pf4siO
CFM+PNqP+lsJQcUulwwuXuBD0uxHRmGDBIVtYBvtNeNDTpaRRsMQQZY0F9N1
l/iwxllv3ewRgrZFilySuMwHu8qBHetHCZIwCLYWXOGD9L6/NnpCguiTSx2b
rvKhsE08C41Ren2Idy2y5sOmnd+ktf8SdEE+7/59Oz5I3J6jNDBO0PjFGb8j
7Kl8vRAUFv8jKOrlUaXXjnx46sR/dneCIJ2uZ06Zznw4blxatHGSoEal7pKS
m3wIN1JV+UbxLUuNBdUufPASH28wmiJIOsnjfJsb5aedC75VUpzZV5HC8uBD
XbrejA3///98vdSY8DYfbKKtvD0p5tiePzD7Lh+CVtvvLaA4KC0pcokPtX+H
zuFuilV5AobSPT4YW2Y8/Ufx1027Nm/248OJvu4IERE+snIO9Eb+fDiA3CaH
qHXR7IbqY4F8eHCtSPY3xa+HV8pfCOLDtOxz11cUg46trW0IH3Zkyy+/QHGn
W26Beygf/L+dmylK8Z1CkTkBYXyIDXPa9Jw6//J/R0yehPPBzNXv1QqKC/We
JSREUueNrTQNpuI3vcsQZD3lg9s1Z5N+Sq9RrA6lUXyomfXjmRbFkTM8Qmui
+TD5VlHRltJXa19Fe/sLPvw5Vc0LpfSv81uoxo7jw35dNdFXVH4cKs95/I3n
w38voi7FU/mTmJv0dU4CHzQ93UQfUvlNNRAslUnkw6kJdb4Vlf/DwXqWysl8
cJRep6xB+aO/KuCDVgp1/cSveAblH2WjlcePv+fDBXUl18UCgj4/vhZ7MYMP
c+58qX1E+e9SQw7bLosPod/kb/3lEhR7+khgYC7lT2O9l5EDBOlFPW16ms+H
tyr711X2E9Ta0qWcWEj5ZaffBJOqB5mL7mVlxXwouRfxeIBB+S2ufGEd5kOX
7ahxPZ0gY7qkWWcZVc+vsi0TqXp6dCVxfPwLH6Krsu4speptru0v7S01VD9Z
lPtsaR1BSakK9/bWUeezaRy2qiZIn2tTZ/SLD7ZPklISfxDk6zR93b6Jilfi
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
NsFBEm+E09fGYDgl/evZfIL/B690GiU=
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704641921986104*^9, 3.704641946639668*^9}, {
   3.704642181108387*^9, 3.704642187319148*^9}, 3.704642277074409*^9, 
   3.704642368833465*^9, 3.704642624704715*^9, 3.704642711952573*^9, 
   3.704802609504027*^9, 3.7048032379762363`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
2uoQDchfqoeI+pP+fEKHljReT+W+k0R9ZKxogHJclgY6BqY/ifqT+7OtC2KH
aZCUZH+dqK9wm2oyb5KnQVTDqWNE/SVK8tGGvwo0kLo2KkHUZ6RXsreNKdLg
RK76SaJ+U1w5I950nAaXx+zuEfUd3Vd75PNP0KBoSLWHqAdRbIxUv5BoMOre
aE7YTf6ZVpgKDU6d5eMizMVaZuKlSoPuRPYOor4U1fTHzu4UDZ7+SqgiLB0t
46Z3hgbbbjENES52svGBczRQOMwmSvxel/T2uYQGDQKV8r3+f771Te+2aNJA
5soBVuJ63Lo5kpgv0oCTTzOZMGeC8vcpLRoIxe8nE9f/5u7t8jYd7O/Tpc7E
/R06G99crEsD7uGdAcT9F27pH0jSp0Hx2bPlRPvojPDPRhjSQJpZeT9RfxpJ
01h5ZEQDJ0POFKJ93R4+WHfDmAZHtTMuE/UnTu2sLUZXaNASdeYgUX96Izq9
+5QZDQyiKncS9adDM7tkpK/i9V88q0TUnwpzDZW3WdLA3KTKI4U4X+BTDTZr
GuxVM+0nxoOr+LJVty0NBssmBYj6U+Mjag7VngaJR4MliPqmVB9lPasjjifa
Gjui/jkW3pQheZMGbV4Jdj/RarSKdSdv4/2McEpWoD+cLzTRd6XBytvgbTVo
o7VJrF7uNCg4eu0eMR8yr8RcCvWkQcKNGSoxXzZ/f5UUR6bBnfzVZ73oaidf
vfqHNCgvOGRA1HtJvaaxOwNpsJQq8u8vcb+K+r+PPMHxyazcuRbn61LYeU31
YBqImg4PrkOnaigu3gzF8f5Y9x4xv/fkbDpV+poGEe9+d8qg7/Ote9X+lgYX
O9zEiPp2z41/U1PvaFBvnPse0C/EpsL4P9LA+YfKLi1ifQv7OWydSAPZCJMr
zmjL2R9HPb7SYMybZ687ukg9NSg4hQZXVViFH6Hdmd8dzk6ngUVQ8OtwYn1y
dPNel4ftNyk0StTzz1Y6tosU0CBsYeBIOTp2r9VB2SIa7IlMymxAX+nWbjb6
idd77czFUXTDOYk9iTU0aK60G+LD9fhQ7E63wjoa7H9wpGIHOoBJoLq5Acfb
PNvQQbRaFsvtvy00GOFpSjuFztzTW3Khlwa5Jd0Nd9GR/55Z0GZoIM6qoDKF
nhh1dh2k0oBZdIPPMvp4vY5/0xwNjKptljkw3nS/50vOoGN/1Wa6i6G3n4xY
vruKnnHrsEBHe78LWbNhDgy02y6Ooecc7n+c55mD3wdKan6jVfXMs4Z554DH
tP0BF8bD4b27e8r458DpevETKbRY+SfxQJE5MBsIO+GO/rLua8FmyTk4Hn30
jBDG32Xa00YWqTn4M8N0UQqt3nljZFF6DvY80Hyuhp6Il+FqPzwHnuL91TeI
+tL5DP03SnNwO51FuAKd8jR3es/5OYhiaLg8xvwge3PVNnn7OVgJF/h1BPOP
V3JyTiLX50BFqvGaDtr9v9elLDfmgM8w+8IN9IlQ++tNN+eApBE1+QVdvIm7
wMl9DoqejN3ehflPFa/m1QT/Odg/pCu6E/OjRJmMzOeBc7BTp+jkSfRTbREu
9yd4/9t+fbNAa4VMp50NmYMk1TO349DNG5+yUiLmoMrT54Us5me9PHWfd3ye
AxD8lWBgTCYVSCn8ZY+fA9781Zx76PcX32nPJmD79RkLfURbBN9Yzkueg7+D
0k009NiGjecvZ+HvjUOkQzD/m1uvPRteNgeh8doLfZgfsnI3HeEamQOuU/4m
hZh/pmT/qd82Ogd7rSI+LKKNrfY4HByfgxObu3QlMF9Nz3eJ1pyeg6bfeZwR
6KvOAjzPFvH+T7MVumK+W9BqMsbHNg/Fj28lnsP8+O6Hscjt++bhh4kJ31lb
nH8XeOWl9s9D4PyplUB0/bJiA0liHgQG/7tSjxbXDWQ3l5qHvJCvIUZ2ZFIr
26HbMQrzwIgif7+N+bucwy1N8bPzYGPy5HAh5vfT8qv/ZGzn4eOIoXj6TTIp
yInXSNR+Hu68TpxlvoX9H78nnfv6PLheZtulhXYQ0bg26jQPXmfEyqfRE2sj
6t+4zYP04er1h1xwfa+X+cDuNw/2wayGxbg/6bWzOtnzaR7Wi3mEK9wjk2qj
qr39huchlTvSUcGfTDqnmJ8jbbcApeFiXac+4XxTEHxzwmEBKoaWz39HKx+5
TVZ3XADdwuzEQ3GYb8gcULW8uQDxEbZSWz/j/Nn/ovql+wKwKwvwjX4hkxYE
HPtWA/Dzu4Lz95MwXi2JsNYkLICt3Yz483Qcn3S30Y6kBVj49ECDOQP3UwtN
FZTkBbj1SFjCCe1P9X/KlL4Avy793aaZifn92OLWw7kL0BQt/W5tNl5ve82B
19ULYGooyH31B54v656W7fQCSPo90u4uIpMGT5bQdGYXwPXzvb+Kxbje1HCE
KtHw+EUpF1+ivw6FtvAsLsBY7/SQVgnuL3jijTJXFqDLsDO7APe/Pdatlmu5
F3H/luAXiPvjMn6pu28PLAJV/NWG9mocP+9vCz0+uAhdmdut9teQSTES3384
HVqEn8u/tN3R91VOrarKLoJ0ovWUUC3ul69ffjShuAgz5ddFDXD/nlz6+InC
uUUY37xDg6gnRdzq/9Bgswj6UQ0/ZVrJJO1Aiv+w7SJEtNKPeaA5Y6acGfb4
/W6QKkV7Ni6piDgtwpcZv3DdNsyHZXgHr7ktguai8+Ub7Tj+ZlV2Mfnj9R5a
nQjqxP0I21nOzYGLcKYg3awWHbn9wtzeJ4tw+gTdgKcL85kLRsUaIYuwcHdj
dTCamnjz6stXi5D8qLUhoBvXF7uY6EPxi9AYYxFm20smOT/8EqCSuAhaH3jV
YtAHIpNv6n5dBE4Nfvdu9JuKHyfdUxdhq16Iu2YfsZ9pHvz5fRFM7na27e/H
eEFh2W1Shdersc+4eoBMajO3jgmcWoR5zl/+P4bJJG82A3WPmUUI0zOcH0JL
J5yh2VGxPU+3rHKNYHxYECepLyzCvbM7/hqhlR9PdnKsLGJ8bPywgI5NdNrk
y0WHoY9cQ1tGMT/QNs9xWU+HLr0NkYro1UVtMyseOqh6H/19GW1IkvuqtpkO
JgXPvr1Dczcunlu7jQ4s+2T4d49hfs5wf3D/AB32xoSvCo6TSTve2Is7HaTD
9H9XrBXQ1WBcZ3qIDhflHD110WIBJ0RIsnS4zzeU/gTdKcyU81eRDiDsZb6C
VjnpQ3U/Rwe7V5eXKyfIpBmKy0s7Dfy9mcHNIXRkoLWykSYdfCmGUX+I53/N
Z4IUtenAlv9rs8QkmfTZhlN8yZAO+sPf7vmieZ4Em7pcw8+znV9IEfUjW/az
l+3w/sObNqmiA055Sas40EHSW0RDn3g+uerIvN6JDnX/fKge6BXHCzEf79Dh
6oWLW0rRxzTKAgPu0kE9883dFvSdfcq3nTzo0HpxJZKoR831SZ5S8qLDfpbf
AhzTuD5rrR9t8qXDvcohjrNoMUmfuhw/OiisKbMwQFus+5v1LoAO/A7fyNbo
3qIpP/undNDNCFl8hG6RrT6w9gUdTgu3Tv9AF/MFOsrG0oE5QvHoDqIeRFtj
IBBHhxaTziTi/YUTNe6k1c90kFvTRSHeb8j2sdtYmUiHctaMmPPoZPq5VPN0
OkiJR2m6oKcaiyLPZNLh27TAEBl9IFnxkWQ2HZoa1U8Q71d8stmv+/sHHYKS
HCES/aadg/6shA71ypU+P9Cd6fd7XX/SYWsL36kS4nl5yFKZcTkddizKV1ai
n58beyleRYduFi+xDnT9XrP7G2roELF94G8f8b7ImvZrC7V0MJUOfU1B+38v
VyxsxPZf1Dswjy57Qdr1qZkOo4JvthH1JpZbWZxBrXg+mbdNq+j7EnFdBp10
4OaUi1g3Sybls4uWnuimwwiZ/nED+s/Qi8TdvdjfhxrdNqNd3/jemx3A8WS0
21UYTWYtSFwdosOu6TjGDqJe5MjoWk+hg9N4oDzx/szTNikukTE67L4zLEu8
X/MCrh07OEEHvRc/pw6io768tz0+RYcxmZOWxPs4nzZ1RKjP4O9lHV4R7+t8
9eD9dYmK4/uBbhBRD8kcPse4NkeH2TjOE0S9JF/zoZjbAh0cg98kEPWUsszv
eo/pdJh8sqWdqLfUis57v1iig8jdR8VEPabVTyI9dhn7I3vKjqjX9NIshtJX
6JBrYNRA1HMoRm82la7SIU2gaZGo98yUNKs0MTHgj49xO1EPoh9c7zy4hgFb
Wf+4EfWi1fBT72ksDEgb+9ZGmO3fvTomdgacffhogfCGa5mrPOsYEMjuXEd4
S8OMpCgXA56LuV8jvP3YPpND6xlQSntTQBxfLMY06AQPAzbSWpqJ8x/ijvhx
nhfPL7fjM3F98i71E5c3M4Bk4aJIXL9yL4eQPT8Dehtr/Ij7O31G5Zz7VgaU
he54Qdz/hZS7bv6CDOjxsTAn2kdfMDUuYhsD6m0DJ4j63ZWHE61xIgxQng+U
IdrXenIXW5YoA4KbDeSJ9r+TF2rZspsBBcX8d4n+ui9WHTq8lwE+UyOZ4mi/
YJaS+X0M8C04kboHHWHusnPTQQYsmUkPbCPef6pM0tp5iAE8HW/5thL1KDmK
l7Q0ns/5KOsmdDarQe+FwwxwFnsiwo4udAxef0WeATnfNp5iRv9qK1e6fpQB
c6d19//B8dr+5ejrQCUGDLN/2Ee8H7WkKWT4S40BeQeiGfXEfM7Sedx2mgH+
Ro+YK9AcOwIzKWcZsFOIs7wQLTD3h49VkwFyqhbeyeijL3oaVPQY4PbOp8Qf
Df/4mbUNGBC/ryOWeB/q7LUL0maXGJBUd+0kMd8NjxU8JZswgG+N4xdTtFvv
e40fVni9Y+L7ZdC3m0sU42wYYKzyLnEv2qmSsi/UlgFDdh00QfS1zIMs9tcZ
kCDcXMhMHO9pdq6QCwM8slXta3F90vXuime7g+NrXoVRiNZyX42Yc2OAVImp
ahrxfpS1mkulJwOMarZue4lWUK6XdPdmgBnnruLLaNnD89usfRmwabr87Hn0
oQNbOHX8GPDOLu2JErF+bjGm7A9iwPg+Y22ivr9lZjSqI5QBewVrs9uJetTb
fzyKMQwwfJJWrUasx6G7VvfEMuDrFZKADHrG/9TUxjgGqGn+EBEh3pdyCfw1
Fs8Apj86egsYL1o0tz6ISGXAfaMQx3fo9L+H5hhFDKBtuL52DONNyrx2/1AJ
Hs9y8VcdOnH8dm3dTwa03jRVzUJ/bPkeH1fBgMyYB3o+6LCk0xYGDQyQ3OU8
IoK+ZXKlObMf+wPIVoDxTvr25FLXILb/48tjouipADcR5hEGyEo9YfuH8dUy
+7m1xjjOr/0Dm3LR+pvLl/poDFhuqjeWQR+tkBJZt3YJPOO2qHBgfF7oy1U5
xLoE693Gjg1QyKRv9HPW/7EvgXpacjnx/yQH9lgmv+Vagt81f1/aord5RajI
8i2BXv4vllLMD1YPM1tf3rsEUz0OERaYX3zXeBpwf98SpOizPzyCvnN1W3Ls
/iXgOraPzoamBh9ZmpVcgvQMisfnIcynJmwDvOWXwOcy0+zIIJlU+r7xa9KZ
JeAvO7BWHfOZ+1mmTY3nlqDVwcuQD32idorB0FiCtjoH6d5+4n0LNpWTWkuQ
aq5o7YSO0z/e1Gq4BDHq63ueYr5kef0X44/REuxPe3JMD73DW094p8kSvDkv
unUbOuLbDSt78yXYXFOnEYv5lu6vFf9nFkvAlCUaQ+RnvH3+XzOslmDDs6E7
kujaxS1NnTZLEC2YU0HtwXyA+yPjn+0SyFaQItLQ/wOjKh1t
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwd23k8VG0bB3DKVilpkaUUKSESIZG5iFYVQiUqWbKH8FinRbKmjZJkLcoS
kTU7UUiy77uxM4OZkaT3Ou9fz+f7acw55z73ua/rnt9zRG7c0rNYxcLCErua
hYX4b/WbPVOU3OukAIrzzzc6ZFLsA3uvpRQ10PszMEB4bfOv17kp5+D18Xb+
aPSgM2M5j+UifH9x24VwyZ/V+1+kXIXyr9kLhM+VB6QpS5mBoX3cqxh04UMe
rfcsNyGS74hZLFryzItuvlYbWOfnqxuHfsWzw8UvxQHONN43j0ezTfxi9wQn
6L5wNCoBraIdrntQ6jZ8cctffIt2/njpzdhWV4i+veKRiP6wcft4DMt/0K+z
Zdd7dL9z36GLk+6w23jV5Ac0f0v83Q2tnrA7rqkzBf3wlQS/TwoZerw1JTLQ
vT6Mg4Jn7oLm8z/+meglmfY2V7gHBRtK12Wj5Z6+3i0t5Qvtye/vFxDXp+Hz
PWDXA5hQHHctQlvPX701vNUPNMcdQ0uJ8TMQ/fKaxR/cAl8cqCaun4PNlEn3
h7F+w7wadFvuCMeFyQB4ZhdvWY/eIPhBb21rEIwd3XuoFe3Te2DCPSUU4gT3
hY+iIx7zPmmOfQzaTt7aU2ij2N+C/GeewNtbXJI0tJtuV+lteArC9lKX/qDT
sqK5paSew2WKjy+vLpl0JORxX/u75+Bl5HBrG/qb+d3Mh7vCQN7R6f4O9PDW
G5cGt4ZDfPd+YUm0kPuet69YXoLG7CpZLfR7Hb7/Tni9hJXQTZe00YoSnKfp
9JfgOUF6fwGt1zk2qzMZAeveBZTdQAeppqpwtUaCvgBb9330Iot8k1tKNDwm
f2iuQe/iPmHoJhsDJSIbLVrQJ7dd6XDNjoF7a4rE+9F1L8puFVyLhTdiA5oM
9Pa0cdd86zgYyzAeEdMjkzIybyspp8bByiP6hoNozby/i3kzcWDYN2B3FG1X
weuddzseNGV+VBmiizqU7+f6JEBPS8NSMFqvr+KYUmkC6FgO1r9CU4bPsueu
eguhqc87ktAbqKYBOf5vIUqeJ6wSfZUjKDT76Tvg7zqQyHKBTFqR64zMepcE
Q2JPAnzRzw6bG8uPJUH+uPF0GHqv2syOLMn3MJW2MzQRfe7UqrjM9Pdw+s/K
gxp09DXJpE/5H2AsNEFvqz6ZRArxzEr/kQIZpacrc9DNT9lcD2xMhfGIm3x1
aKuXoYrpeqkgJ1yRPIB+Eh+f/7EtFUwvj75eb4DzPa+mJG0gDe4Nj6dYoe+O
CNal0NOh6G3WiJQh3m9Nr+wBgQxwEvXpPIb+xTf+YPpwBlwYOsxjjB4sqNzN
/l8GGCluPPIIzbba2/TQfAZMRQnGzqFPPJ/ofjb5Cd6HSnDUXCSTdCwupUav
zQT7xYMSFPQlpSqvZIlMCCsNfLbqEp5vV5xg+c1MqCDVK6uig3ZfvkQbygRD
Vh1KJro+q7rpfHcWNH6z2/rxMpnU6qeQcOVPFnydSP5Zj+67mOB8U/Az9Pxa
bJ1FU/+Qee9c+gzXmd71ckZk0iZNxfMfmz/DiY6j9oVog+a3Ndw/skFt3fua
3itkUvfCvbLvRbmQ0LhjvdlV/HuS2Qfl7lzwvkmxeIRmC9Z8+mEpFw5MLW7N
Q0uLcJoGKuXB5L8Qnw3XyCTy2RCWU5/yoCxb17UEvSvxBenb23zQ84gzljMl
k8wvphRVBX8BkxDWZ1fNyST3+JB3islfIIlFOjgMHTJt/yjx2xfg6Rmn1KCz
fWVNHrIXglOFRvVhCzKJIyN7WetOIWx+pSMvYInPF1epylfnIgDBc/NTN8mk
yfzm/IrLJdC/OPliwJZMSvxVvP6bZwn0PHRhk7Qjk66Pvzete10CdjfuTTuj
W/l91rT0lEDWg8dyHPZk0sCXZ/vnZUuBY/ljkJwDPk+CKt5s2aWQFrvPI96R
TEpoDxYSLyqDyEeCP3pd8X7qSxvZ/agAMUXZe3n38PPVbl7N3RXwmfez37b7
ZNIpldIo1akKiNAuG3BDa4he6ONeVwnWRr5vFH3JJAWqu3nayUqIKdfZUPCA
TBIMqXSYqagEpm3wzgZ/XF8qrvg6FnyFpsysZLlQMuk/+aBUl6RqKPp2XTf8
NZl0fH37avG8ajhyQffDuigyiW90z5WOb9VwY7sl3310TmTZGrWJapjIEZO4
9YZMYrD+tuSU/gZmyu0sp2Nw/Wu4KRKZ+Q0Cee/QWRLIJBd7rRclRd/ByOhx
7c1kMskxieXu2uZaCI2K2/Alj0yqOhow5DBcC1259Kvi+bi+NPOcaFqoBdW6
mmvP0dUsOzdEba2DjmR+B5sCMknY6GiU9MU6EJ6nv95SSCb94PbM0+msA2PV
G2qXSrCeOc9TX/T/gD8fzgSEf8Xnj8tL/w/1Bzi0WrbR0a3Rq/KusdbDr52V
uQZVZNK9Wt47+0TroWntHYkt1WRSu5js+gKzeri08ro4+BvWpzY7iR5KPVRP
XpO0qCWThlQpprunf8J2/byyogb8/JHyQvvlnzClI1+85heZZLn957pu9gao
N5U8Z4C+IphiuXdrA6Qm/RafRGvxmW3/It8A2S4VJbxNZJLAhib/YccG0Dc5
43C6hUwq+5t5VWmyATxp24usO7BeLe8K6Z5rgNdm17e8R+f8Cc2/t9QAihoO
/0bQKb9tttSt+QXP9P2fXu8kk8LpojXX9/2CqQ3myTpdWA+nnykEWfwCUhRn
5/YeMom3x5m7p+8X9N940GnZj/WDZ0hffOwX/DhjfTgKbaR+4Y0T9RcMsJ7d
9Qsd/05ehoO1EQoLsh8rD2D9dVg4f0C0Eaq31S+yDZJJ+v9cn98zb4SJrGsG
D4fw+TtI6aq1awQ/ybiHn9FRZoZifK6NsNI8fHIQPVytmJ3s1widymfvqw6T
Sa5PmK1NiY0Qa/m5ZRL9QsRDcO94IyQM11kpUsikggvjNxxpjbDDNX7QBN3r
dzml4HcjzCdy0x+g904oq55f2wT57wNHfqFzM5dM3KWa4HFJ5Kqbo3h/jnnH
1dg3geOG6ZfkMTJp2XVqfItbE2zZcK05Br3rvbHcNXITvD3E+qkUbc19tGI+
tAnYBj5ps45j/9H8d3h7RhM00t8JktFClnf23ZprgjFrTzfLCaxPda/s9i81
gUuc5va76FVynzPGWZuB/1qdyyv0xN+xw+a8zXD3tjupFp0frnfqsmwzOCZP
aEpNkkkXv+6xOebQDFOnz1/pQZ+Wgo8sbs3wrNPXYA6t9tRorsinGc6rl3Fy
TuH1mjz2PPyoGU7oPg8/gKYvLAZJpzYDtYH9mg/6uVhdyraJZpAu5ZpYN43z
N4gy20xrhsifwgHb0Z5UlkPPfjfDU+6Gwf3oG4UKhdxrWkAlY+1PbfRB/Zg6
1n0tkJ4+EBiIFivI31hyoAVypDs2R6D5dzXreyu1QJW/hXEimmWKq4dxvAWG
eiQky9E/fZ2nJy1aoME+ppiBLh8POfjBvgUk1/gdWz2D8/d8kqulawvc21gS
wIOOFur+2/+gBV5+/6cvjrbP0trQmtAC0Rflly6grwtc13ue0gLjwmr+V9H6
dzxf6GS1YP3f3WqFVj2TLlxb3gI/0w4UeKPXDfEfKB1ogQ8lQzFxaA1xHQ/D
8RZwvRKyNRntbutfMUVtAT7WXJ1MNGWeflGApRV012znL0dvPywdn87ZCs0v
It5+R1/wNp/S4mmF71FCzAZ0KVvTXWfhVmho+DjTi2aeXFvLtbcVSj7/fj6C
lnmkvjVGuhVI4aX/JtGvt2Z8qFVtBWeVA1KL6MbLo/Ommq1QGblu8i+aK1pY
bfFMKxwvq3NaPYvr595HjWJXWoFz3Kh5PTrNpnL7lxutELpKP2MTevjjH0td
m1Yokgq6sA2tq2Tzx8cD/13sz+xOdIBXnNaWe62Q7G00vhtdXNL+ODmgFRa4
IVkcvf/kCbG2l63ArtB7XwZtFkJ2sI9pBQuu7MiD6MiG7LzVSa3wYvc5z0Po
hi3TqyI/tkLgfLaIEprzsthZ2ZxWuPuT+UQZrfbmysuqolYgswl/U0G7DDwb
MP7aCr39B6uPolP21EjN17VCaYlKKAk9aM3qFtjcCv5bju1QRwt8PFy6s7sV
xN3OuWigdeZurc0ZaoW+ZLPnx9APFZP0tSdb4UGWv6cmusizN3pwrhW8m4ol
tNALxVvH3ZdaIcKCO46w5Oqz8jyr2uBDvHM/YdMTD3zerWmDi2/nRglHBH+p
VuFtAzXHkFzC9T/neBv524BzNek8YfYtksZWu9rg3RWudOJ4qpdME1fE28D8
4UgrcT7OURHUsANtIPC+sYo43w/9P49IKbWB/ppaMnE9/WKcfmVqbeAq8n2F
uF4+a7WfF4+3AUt81XE19Nk0V4GZs23wyrvQUBX9gJZq9sAAP58VL3MEXaAw
nCZo0gZB4o71xHjTPIQWM8zbwPGNoKICel+xnsYJuzao/PbCQg59dVVQSM/t
Nhg0bDc+gA4/XtZ626sNKL9/Ce1Hr/p5wDY2qA2y4rKoYmjlzTezFZ+1gfZD
bw4RtOPF6H91r9ogxqBkaDu6p4877Pf7NojLtl3YjN4iptn7OAO/LytdnAd9
2spr3968NvDjFxVdi86jjhfqVbcBm7CK3T+cz/xWu0VDf7bBhg44+hvt0Wfs
/72tDdK3LNTMoY/U/9SFsTYYvtEnRDwvkVprcr2obaD8sbG3B71UqLE9d7EN
Pq6fMGlFf0nJpkivaYdjzNnHVcTzuXv2jDVvO1z/80SjGO0due/TW4F2MDAp
yMgm1oPA115Cku3ASv1dnIAutry3cc2ZdkgKloom1gfh3gJXzQvt4HNOcJ8z
mmyw0HnnSjswbwjY3USTNG++Y9i2w5bdHiK6xPMucvbIcEg7SL38pCKC3vXq
YczO8HaYObrnyRb0vY2lbFfetMNI5GAUJ7He/JP7+SutHQ5la/ZO4fpX0c1v
XlLfDo4lb35nEeupvt73pdZ2kHhosuYd+kFtsIxiXzs0Nun/DEdrFqwsps62
wzeNOm83dNXL4UeRGzugOmzQ4BB6L4/wfAt/BwjeMuHZTazvDy9e4hXpgJsb
s7150Sdca0QDDnZAxs4cp2msB9/0MnJd9TpgsnFdYRx6X8349k9GHaB7xXFd
KDpQfff9qRsdQDnOy+2JPi37QtvsdgcI3I3fqYuuXe89oBPWAb6bZR7+wXpU
/+3Euv2tHWCvxL8C6JXbUnadPR3Q8aexXwIts5PnR8BIB2ykffPYhA51bQ0d
WegAYzr/j0Gsf+dELTbFbO6EtdabqXfQP7zuC2zS7QTBvqrOFKyvy3stPUsv
dUJDQuXiY/T+xlNdDtc74WWXd/VtdMg+3je1tzohMvaj6xG0dkvMLr/QTng6
zbmuEut3nUyR+GJtJ6T9Sa6qxvq/3BEbkNjUCQvejpWJ6P1+D8b1uzrBiMJh
74cO6TqT8mmiE16Zihapo7UDOmVs13RB0qFb53Kwn6gbYCr0Hu8CjovC/aEj
OB5hcpqVZV3whMWW/w/2P2K3+Uu31XSBbFotvQZN1l1RsW3sAnuz2euRaLkN
NfKbhrqA7p/eq4SO8DfdfZ2tG0Iy/G3tsZ8y93yyavl4N3AkNFiX9+F8veRG
Pn++G37zTs4EobcpGS/FX+yGjKvLS3romnnxuVNW3aC64JU40Iv12r5k4GVg
N4i3hMJv7O9Wrs2Uytd1g2B0tDxvN+4H1ZpV/Zu7YUrr099f2A9+2l6Q19nd
Ddf7zE89Q5t3+GXcm+6Gte9jzHnRtXo7Yn9u6AGTXy4Ja7CfjNDSvmOr2wP1
oRqbB9vweFLJRxNae0D2r2DzQexf60dTS3729kCoPyd9qJFMsnmbrr5M6QFV
nU2vwtFvd2RrGTB7QOMCzYaJ/S/fxtKznPy9sH4hVTkb++elhRYT28u9UE7p
TROox36hmJUs390LCwUlmwOw/9bXu1xcMdAHwa4bXgtgv1+qwaFqNt4HeqVc
rLlf8H7KZ+WvovWBYSdTSB+9Kuhh5y6WfjC7auHyCPcLnTb9Ldd4+uFY57aa
ZdxvBO8Pq+uR7gdbQSqlPptMmkr/k99h0w+u2yqvn0wnk9JzasJ+DfeDm6PC
lqY47JdOig7Mj/UDl0q5vglas9NDmm+6H5o/vXkxGovf/3dflRG9H9aNrdqz
jPsfDi1/5hD7ALx2yHi9JxrX56ZjRoy9A2B59JSVVySZxE0t3ClkPQC5V3qX
jj7H/blEerL59ADAq+E3t/2wv2zpcgHaAOzkqfTmRdff5SJtpw/A4Wm9tHTc
z8m3mzY1LQ9A6slvHNO431t5uGVZg3sQXP1tPtnifvD5sMdZEalBOBer88jj
Ds6nGE1qj9Ug8CiojXd5kElOZ5wK8u0GQfxVrKEfWoz55kG44yAIHw2TOIAO
PMfkP+s+CD4qP1gfuOP4//2gXug/CAr/fvvJ/UcmjRvxPI9MHITyH517Elyw
PvB1KlwcHoQg0UKL5ltkknGX/yO/sUE4eSdr7gE6IVZhJGtqEBgfh1YU0HJS
T8M20gdBvoct/BXuh3Xg5Px39iHY5iyXZ4n75RCbnAxV8SH4Fd5Tz4/77eYD
5ly2UkNQffv4mV82OD503uuvDgyB58h3rSB08h17HobSEHw5Zf35rzWud2Fi
Duknh8DW2dJ5wopMYit5JiVqMwSbIvaoduH+XvsB+Oo4DEGL26k7r9HPT810
kp2HYEz6rqoxWrT5VFCX5xDExPza3WdBJsE4y3hY8BDs95CPmjDHerP5ViJn
2hDclHTv22aG/ffNMyLTs0PAG/Mu59s1vN9RnMucC0PA6r7dKAJd1VDRKro4
BJnH5y2s0BHKqiGXWIYhcKTp8xq06jppZsXGYTjLXyqiexXrwccNPyIPDoPi
ou73OWMyaXqwJilbYRgMmypyv6ENt/nfb1AeBl/HOI4Y9L67/5Q4NIZhODi8
Qhtdp0uNd9Ibht6z61NTr+D9of9yP3l7GG7LnK70MSKTfCRCL5j9NwzN3n+9
LqMpJqdlyF7DkGUxFqyAzqsqH8ryHYbSh5czZy7j/YzIOrczbBisz5qts0C/
VQkXY3wehk+hGd6ml8ikQ/cvNSQwhiEi02o43JBM8msY3+e+NAwh8s62PuhW
Ya972ivDcFo6/qAF+r8vb+To7CMQ/fm3hwK6YGEw7PjWEbj/5gS13YBMUr9p
f3lcfgQ+5u/YLYV+lr3yqUhpBJxEFJz40IOrn6x9pjICXIUVi6zoB7GZX44c
G4G6htnMDn28/x3MHSF6I8AWpVkTjD6nfX9QxmkEtG++V126QCbFRG5WWe06
Al89FP6Moaljb5+3uY/AtbbdM23op37VmnfvjoBQJv1WDrq5mDvp1+MROHn0
WJcr2ujgS1uXjyPQMf6Ud0UP+9s7+ypPZo6AbMrGhVn08o/87TtyRqDviC/H
IPqNTfePr0V4faKkgip0f4KI7LYfI8ButdvwGfomX+pC/uQIaLVnScqhtcnF
nf2zeH47/vu3By1HaSjlXBgBXxs5LkH0SjY9xGB5BL7I+n5ehQ4zIO2hcVPg
2ndLp1ZdXK+KdNfx81KgdrqgtxZ9bY85TW0rBcRes5HL0JL0gKKQHRTg2hig
m4YuDWs02CdDAU4t1uP+6MTlYZXzchRo+f1BlYwONmeKuClSQG3Jz8wVbXho
+0yFGgV6ddaqm6OnmyweXjtPgad7mxU00Y0q7nYPL+C/aye8V0XnJQTppV2k
AOXc7tMK6Ae304X/XKNAZV4gvzhacPPvnBeOFIgNdO7lRrN4rXtT5EKBH/Ua
5RzokcEdvsPuFHhO921i0SV+b9Y4L3ePAoMetT50HTLphaCBwmU/CoRLhPJR
0d73bwrdDaSAxbEj3RPoE3ohoz+eUuBeYNN0P3p/QfSPhXAKyMX4KXejN4l+
yhKKpIBta/KnNiJ/oLXcsY6nwI0Lg3t/oisvj1k8SaTAgEfp7loi3yhbOpOb
TIH65g/aRJ7g8nQnP3sWBarVNESJvMHo98EVqVwKPDtZVV+IJplqDut9oYDe
jX+J+Wix74Y1HiUUOFLcmZxD5DkHrTNiKygQEHK8MwtNjfB6UV1NAdeZgwqf
0K0sod4ztRSIGg/58hEd15B5UrWZAqtnDE4nE/nJ4a8yZu0U2H3yvR6Rt9jF
tm0J6sbxPi7/kMhj9LgmljL6KTC/PDlM5DWHHZf724Yp8OjdNwcizxFu31C9
MkYBjYjS3UTesxpE0vZMU8BftW41kQeNJck/16ZRIPjv8AYiL6rnOe5xm06B
X0fZtYg8KeqpdM+F3xSIVzBJJ/Im681b1Q/9pcCUqyyJsGL48tstrKNw3dt7
gciv2LYNc9HZRqHfivT/fKsxotauhWsUTh9w/79jBLMasrlH4fenvXTCdlGR
h15sHIXAgjNAfN8R4fsRbltGIZc2lkGYK9Z62ZB/FH60spwgzqdFRPe60vZR
OJz7YhVxvvEJhyu37RqFg4kfhwg77tm1b3H3KPi4nJ0gru9oEmdIu/goNCe5
8xHjsVZidjZPahQinRWtiPFqT2698OrAKLinPOp7h363vzjXQ34Ubn3z8076
f/71TshICb9vtTiJyLdA9tGdIyqj4HXfU5zIt9ZnugwJkkZhl36QQhq6U974
xB+NURi4aWqdjn6ffSyl6/gohPmtqyDut6uSFE/h6VH4Tytc4zN6o8pSq7fe
KPhO+2QR86e3cOCIieEo6Nf/fkvMrxS179FHjUZBWe5xYQn6uEaE5YrpKOzu
P3G1ingeTiky7jiNwqc9Q/Yt6NO1O4yuu46CJqvgsw70trPsxeAxCg6/WHt6
0Jk6zX6s90bhWyNplIIevei81ffJKNgmCzcsoT93XPYwCxsFyeq7+4nn8f4V
9Z5jEaOQd8Qkg53Ih65tfMcWOwpqPosyRN6lZ/nx0MP0UaCd3riOyLN2jYVH
WGaNwgGVF4myxPph7bN8PHcUGLnPbJTQAfbalZwlo8B3z8uOyLuKXSYuBNaP
wigLl7EZWsJ37+2Q6VFY0UnnTkLzu2w3ukwbhTXvFzZloDksNqnvpeP5XwnV
yCfytOMrG0qXRyFH0km4Dh27tjV5ft0YJOauqp8n/v6Z36CR5BiY7hdTOoPr
Kaev13dxmTEQWhQZJ/Iqxm2njIWDYzA797T6BrrZwIQcqjwGMw4f1nqhHwso
CJafHIMhHbaMNDRH3LCuxM0xUPIYSRHCekF/2nmYYYOf/1MGkujh+w07KxzG
YD52kF0ZXW5eOG3shsff91fkItpnX1jgE78xiHTh+RCOXkg/VsZMGIM4p1ey
27GeDcUqv69MGoNHkX4T0ujGpwceP00ZA54/8h0kdMZtIROpLPw8fZ2hOdpW
aX7xavkY9MxAazp6sDhetqp/DPI8G5V0sX5afhd4NzI8BlFPWeSIvGqi6YkA
+/gYPM3Vd7yDpo2RV2nSxsA+ff+Xj2iWzVeay1jHoeTxUvhGrN/CNze7F4mO
wwpp/9cBdLxT0FT33nEwPOaq9Be915vVdFlyHMxSpOn8F8kk6aezp1Tkx8Hh
QJu+Llr1S61Q/rFxoCYGZ35FX+Z5UPLZfBwcfcQNirC/6Bb4I99sNQ7bffry
etDXxZzfz9uNw8fQ8VsrRL6lfP2pnOs40EZ+dwD2J25mqmYZfng+Oy6mfkeH
5S5wpCaOQ2fDg6JJ7G8arlmcSxgbB9OEK/KuJnj8B5/Ae2ocfM2oG6PRSe//
yhlQx2G1hLNWNZpMC9/GuTgOT44MfxbE/my/b1W/DecELDn/zfuKDkgUvy23
dwImDhdm7L+Oz//0+Msyswnsr4S3qWN/mMqrGBR5cwL8ypVeuKK3Kd73vm07
AdyHbN2T0TNkQdM9tyegyM7h5lbsL6M2npEMvD8Ba9S/Ls6iF+VTC3XiJuA8
X5pUHvannzwdBvp6JyB2svDNC+x/M/NUTNcNTYCASn5AD2EG14Di6AQcsNtP
E8P+OdM5of/R7ASk/N2mko3+bNPep8IyCVEpH3O67MikHCON3pcikyCXGHQd
sD8vPMLXdd58EuwG3K2tsL8vdB8y8rKahII30ptLCOdkdCbaTcLp7ZTDfK5k
UpHcmc6/LpPw4qAC8yu6WPJuR4rfJFA3SihK4X6hTHCijTNpEuQXL1hwe2I/
vFTUXDI+CWLr27r33CXqy6u2tulJyMj5eTwQvdbAtXOWNgkTE3/5ptFn0/f3
71yaBNKFAkr2PXz+zF5P3lk7BXfed0pp4/5nqM59FUhNAbfXtztBD3F+xsjL
ltpNwRuNNetPPMJ6cexDcOnsFFQ/vGvq8RrrJ3tX7q7habjx99FZ9Ry8XxTu
Ks2xabhYG/dfBrq3Sq3ZamoaVJ/xXdqZi/1JQDw1Y2EanPdXKC6jw9baSKiz
z4BWrsTxzHy8/zy/I033zoCCycqzDUVk0i2BbeR4qxlQ9Lw3daeCTNqwdDKk
ym4GPnCmPBtCp3Z6Rk44zkC5FqP2eCVe/+veHDmPGZDh+Liw7iuZdEM4cbY8
cAZ8B6a5nlZhv7VbwXQoeQb22otG+33HeiV9QVNsegZekc65bvmJ/Ym4UQMr
bQZWjR1NMEOfFjU17lvA75dVMcv8SewXbrlELs/AgzifiHO433ZgDX67kXsW
3DpZmu7hfjy2pZztr+QsMMRPWjXhfp6NLPe1xWoWKF4DSaLtZFKQu7Jult0s
vCuuHDFDb7wNPU8cZ8F3Uf/zW/QOq3P0M+6zoLB5efWeDqz3ejZ7yv1ngS+M
32lXJz6fe+P9PibOgly6dtKqbtyf1PMe9x+ehaLreuxufdg/HRY30B2bhfXb
T2W9R2+PVzUXmpoFkRqxv51oW9eb99PnZ2HhdoGFWj+ZxB56tc+WlQpqrUPP
WAZwP3Los1DYRiocHOd86zxIJrmPq+322ESFf/4ZCjFo7ejvkle3UOGDu7FV
LXqes095Hz8VPH4IZooOkUkaXWsuFe6kwq6z4/116IF718KGZaigukJd4hnB
50Vx4vV3WSpQOFqrFNEBky4JH+WosP6ttbIJWtYgKNNdkQo383i3fEDf3Zfd
wK1GhZ85kR9UKbg+/ly7XuEsFR4/IiddGCWT5nzDtwiep4LLuMhaV3TV4V3b
/+lQIfWrtsALtEO8gtR3fSrcC09Va0MXuV4/ZWJMhaey2ekGY7gf257j52dL
hZYyJ69jRD5lwtr83J4K56R9lG6gI2K0ReNvUUHScXXEXXSL6FBx8W0qfKce
P1mIPiexcZHpRYUL5yadDkzg/Fe0sbEJoULom5RT7JM4///LznMPpQK71JF7
wmjvfBZO/ydUkCheb66Ezld9mZAQRgXWTzukrdByxyq7u6Oo0OxBafuKFtMR
Pn8+DY9nqDTiNIX17an1G5N0KpiHHPvnh77e9HnS9hMVGjme17xCvzE8ExCQ
TcX14rJbKZrPxL2srIgKlvE9UmuncfyjK3gaSqhQtWjRIYTW699wtbeMCtob
m49Iox+bvVta+kqFR+vfCJ5Hc9k0yh+qp8IKx3HDx+jElB33NRpwvPysU6KJ
31enrRp0GqlwJOhnThr6nuM/O/tWKqyZ8KbVoJfc9icm9lJh+GjVX9YZHM+8
/xY+91Oh/JgzN5FXKS6Va1QMUoExfrtJCH3b53JfH4UK1gX2wYfQU74P+QVm
qRDA+uHDDeL3Zb3CPWw0Khjx5323Q28UmZObnaMCR/5Mqhv6ULHJ2a8MnD/H
PIoC0T6Lh+47reD1i1muSyM+X23z2JiFBsr/tp0ift+OD4+NOrGKBj+7xM8U
oavkuHN3cNDANW08qg69wX5o8vt6Gvg2enqOoWNVBH5/5qGBpPyH3hm03Nrz
HLG8NFD6IcNFR19MKtjltpUGR48kp7DMYv13pUqbbqPBy6eNezjQ3pp7VbQF
aCB8LNdiHTp24KmB6A4aVEfzKG1Fy2VU31i/kwZ182nfBNCV5L+3FnfRIHHj
1V3CaMOz8j5DojSwV5RXE0WPCVkH1YvRwKKVJLoX7TkR/TJ/Lw2SdMLrJNDc
+c1v3+6jweqOY0el0QcNocRzPw2Onxh1kie+X8ytzkKGBqw7mAqKxPfPp3To
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
v2X+s16El4HTmUbo/wHXUezi
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXyu6ptn2xPst6yVn6sxvc6+9p7+q4rVfQ4w/g8G
48tlq+fB+Q1Ppc6s/roezr/zpfHgyb3b4fzXO6/sPBy5H84PCNGNyjl7GM4v
N+5aU7L8OJxfsJyhgevKaTj/sc2zROW35+F8wbtFPHfvX4TzpdPqNfI/XYbz
uR9L6B94eBXO3/Hh5Z6g49fh/HMn3Ll1rt2E809PMXI5cvA2nG+ovcp28bW7
cH5IUOS+ww/vw/nrt52acvHJAzg/Q3P9qpS3D+F8EbFbpuFPHsH5X9O9Fd++
fwznmzRFXFj87Qmcny625svO108R7uN3qyz++gzO12xWK+55+xzOf7RvkcGx
By/g/AvxqX6LX7yE8zdW5T28f+8VnH/s194r+1++hvOtnFd2H3j/Bs5fyHp7
u8KTt3C+rW6wi8rbd3D+mXOCbu1P3sP5MTLbWluzP8D5b5rbJCTfI/hlGr9S
72R+hPNn/Z+Q/PEdgr9D+LS0WfYnOJ+V57Ip91ME/63Zv/+GmZ8R4THvTEvH
EwTf03LfToOsL3D+l+21AZlvEfwZxQ8WXkz/CudfT0xb3P0Gwefv7Y8vzfiG
cO+cttr3DxH8insLvHenfofzi2Pjrmx7gOD/M2FMi1b9Aed38Sz5/j8TwQcA
TO2lYw==
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, 
       AxesOrigin -> {0, 0.0073950000000000005`}, DisplayFunction :> Identity,
        Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704641921986104*^9, 3.704641946639668*^9}, {
   3.704642181108387*^9, 3.704642187319148*^9}, 3.704642277074409*^9, 
   3.704642368833465*^9, 3.704642624704715*^9, 3.704642711952573*^9, 
   3.704802609504027*^9, 3.704803238245504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "20"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "150000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.704641842096449*^9, 3.7046418618813066`*^9}, {
  3.704641907479596*^9, 3.7046419193040047`*^9}, {3.704641952143949*^9, 
  3.704641982935073*^9}, {3.704642035036541*^9, 3.70464203527033*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVmnk8VN8bx2emSPZvWoUULVKWUklxnktZWpWiQipFe5Yi2lQUJRFJkiJF
2ihFkkOlxZ4l+zJjZ2aOGfuM5Xd/88+83q977znP83k+57nn3pn5h87sPMJi
MBjykxiM/3+/Oml4qFbpGJKa+P+HIG+Ne/VihgVo2jhP7qNZ0qkh7Q/DDmb3
ye8upHnJv4yvt+AgpPq/qbtNc/EoKy6F4Qrv1itG6dPsqbHV/1/OSbAKmgj6
Ok6Q7POClZfBHUaPCFN0aXbKcFsYpn4W3gf8lQ0cI+h9wYxZCQxvaO78G/Nz
lKDJTZlS6c0+MOhUcKBHTJCd0En0J+ci7Ar6YDcoIihZQoJb//QKMEttrnaM
EHRZtpLvDVchxEu+PnuYji8y0fVqyjUwfDD56MUhgv7O822+pe4PlxzkNdUH
CdJcOa/sMeMmGPQUL1buo+PPEmxKdAsEmek7TrkJ6PzNf3xPaQ6CDyii8TUh
KH/vsY/fc4Kh+B5Q1T0EnW1Zp1OkFwKcWhvdX10EqZ6ST/z39C5kKZebxXQQ
ZJizt/AshIFH0pmaYQ6dv8T3QJ/hMBiPWmjn10wQ22rZxssp92Ag276f10DQ
rfLxrzfVI+B9kcXNC9UENbQ/exfNeAATJmHVToW0PtpyJ59kPICsU//UZv8h
6Iab15IEtyhYaj/n3Kc8gvRElnFvmh/C+OBn8+fZBF2T49/LyYmB3aN5aze/
o/Xbabc97/xjuORskLHyFUHLHuTI5OvFwkPzBH1WIkGV6uH+5U+fQJCOSHpH
LEHTlVXWeUIcaDTVMz/dpvXNsn54LiYOXKqSJItvENS5P2DIezgOwqGfV3CV
oK/P+B8upsSD18H9dj7eBLksz112Qz0Bkv4cXxV9kKDP4KL2kJEIK9YIeL16
BM22+piz53AiyEdt3F6lRZDXjsnOs38nQkZOR0bsAoJWHIpPfHA3CeQ3ld8t
VaLrfb1RL1ItGfbs1kvH/XwU/dPWLHz9G0h6ndP7M4WPhouft+18+gbg2Ox1
XxL5yLaq/+a0yW8hNdN9RWgsHyl13isMK3gLu49vV6i/zUc//TuWWi5PAZNW
21LRYT4yeaGRZp6VCgmMqpZt//HRqaWbAxbxU2G/7SzJzZJ8FPPWw1ZS/T2Y
TXl2erGYh0Sfcofzrr+HB9yzw36tPPTpl5Pxxs0f4MD3QaNPH3lIp+vRT7Pa
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
VE5cF+r/sO3kt1m9cIiXleSd1oVS3n55G6fcCycevNMV/OxCSxPurzyg3gsG
zgGDd3u6kMpdK+MG7V44/X3R9Yv08yXjSKp1lWkvVCi9b5mW3Y3yFa96F7j1
wtjBbSs3ZvegT43yCZ2evXDvhsDlSXEPin8dUyrh3Qs1UyQE1Y096IJlhhZc
6oU/B/aodo/3oGV+pC4tqBfkfM3cAoy56A5xhNj4XlCpn/YvIY2LfL/2nPzy
vBck9tpIDn3jIpfbPg+rk3ohVXS+c8lfLjJZfF847V0vLE6fqNXmcRF/f2HC
zS+9cKNkvuY7DR6yLjaa6l7RCxOrTRtTbvHQ+pjfq0KqekF9dMd85gMeWnLc
9tCr2l5wkva8qP+Mh5iSHl/amnvBZzg7YsUXHnpv/PLUPh6tX5yPVHoXD01/
M6vMTFIAbLZWSTHwEePC8/EDUwWgY3E7WWMzH3EtV2pflhXAWdkJyb27+Siv
dZt/xjQBWAcWOB45xkdeKjdWL58nAMlcTwOJUD6qut0fPdNQAEbZcc0uVXy0
YjmnbdxIAD4OZy6tbeKj4OISvQ5jAWy5u0rc285H8N+rn+lmAvjjV/lKfpCP
kiIPCvdsF8DjTHCSUCKIZbjdmNopgOWig9cm5hDkULM+UGu3ANb5tSU3qhOk
qDJbTbRPAMNLJdS26BB0Pq7Y6pGLAKKMI1mtFgSVmWZFXD8mgJ+Dur8ltxG0
rPVl04mTAugQrkmT30VQ86KAc+s9BGDYjxSKnQiyfL0uruGSAB7+OAMyXgTF
b9Xi5vkJwH0wINHuAkGj/Jlr3l4XQKQwxSbIj6AUfWHh5SABoFcZgTG3CJqT
njQ8774ADFQf5Fx7TNDZPZFmUlECKJZZ+3okjqDikeshvdECWLVKdmj3C4Ku
rXfSzH0qgFPHBJ+y3xLUnTvD+tBrAQi6ebo7sgna4Dzp0aZ3AnCSL3DpyyUo
drKgbcV7AQS3NEy7kEfQTovCC5MyBFB4d0uFUSFBmYXXEhO+0/qcXAwXqwma
ftpNGPxTAGE5Hc6b6gg6rbDf+NwfAZglblEYbyBowc615RtLBLCv0nTyzBaC
LvYtUtMpE0Bl3dodvm0E/YuYfmxmpQACTr5a9qODoFtVZLy9VgBLTxnfl+IS
1Hq+waqkQQDKlucXTuITZKJcEJHeLICDcSc3tRCCor5kND1pEYC0+UuJlwKC
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
/KcfL0gm6H/6+fTc
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
V83Nqjj4f3JFGkc=
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.704641984469862*^9, 3.704642036678155*^9, 
  3.704802610820726*^9, 3.7048032392930813`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
AmHo7xote2J5O2FS11QoEG0jcGettXgnHNV6+/ouOuiubKWwdCcsr7jDuIX+
PFHj/UO2ExR//2dzA833e9OUzK5OYC19dM0VraxX+a55byfIHN0b6Yw+XeBu
9ZDohFbrmw2O6NQ3P+uGdDvB8naQpx26ab3roxeGeLzAQ9M2aFqA+IGjxp3g
EWx1ywp93OVKeoplJ9yTjik+i54m1j6+4tEJu3So9FPojR/zdSRvd4JyY5bu
SbTOFjtarVcnvF+473ACHbH8i5NyUCfcClEfMEAX3rGW6QvthHRhYQ199PC4
YGdoRCdwmfS+O4qGFkv96fhO2J2nmX8YbXuUnzchuRP8HIusdNDB+RlfT33o
hNuc/8QPobN3WrgtzeqEI+7HBg+ie+KXbM/+0glxloY/tND86z/02X3vhLvB
IlkH0Lv8zSJFSzvBaU98zn70GSqP0a+KTpDrGavWRPtcTeG/WdcJC86zHA20
oP+zp4ktnUA3/7uZdHi8l3RDZycka7XbEuR85zu+5xrohHiZ2nxAJzSbqisM
d4LWhaLtpHeMa5WYjXcCb0naBzo5f/w7TviyO4GREHqEtMbmDZ0fKV0w1H55
bh+6FHgduni64GSR2jfSzc5tnntXdoHH1eRA0n9fp0eEiHcBfbjnI+mreVFb
8qW7oGvC7g/p2aYH6f+2dsEJm74dZPueYy4gsqMLYj6eCCbNx3/2p5ZKF+SU
Zy8m+xeySdfYeV8XjMusf0xaFHb3RO3vgvIvrjvJ84s99Z/jT50ukKVV/yW9
zZl/dlq/C8Y6FbLI8cjwm/aWPtkFO/LDIsjx2/e6e6WhOf6987JQcnyPNmVt
fWvbBY1f5MvI+ahnxX5quNwF6UKDPNrk+uQL1Fzk2gWXvpUYk/N5mW5lan63
C3yWrqTrkuvN2KDf16cL1HT8ao6gb19Rc87w7wJrxUM39cjrPU7oocDzLmBf
S1tzDL3269watZc4HkpXFpHrL7px4JVNfBfwakbwkuvz/bKvn/M/dIHSG5Pj
pmhV6USt4awu+NDIHWGOLtj3pFokrwvqJA6xz6CrnewGnX/i56GMfR5t8tDI
Nbq6C3r/Sr2wJu8nsQTtVyN+Xk/X6CJ6rEFYZFNvF4SW7uMnr7dV+74fapzr
gj9LzweQ12vEyZS6RYu6wT6i+Q95PUs5PTuruLQbBAuiTO+R12+so/uDNd2Q
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
XT8q4TM0/eMR2qzd0C73EZWIHN94ORzdKPzPXD6ASvRweY29Qlf7bNQUDKYS
064BYZ/I3yNcfMBfG0YlDthn6bej38mbvTKNoRIPdfVfb6HcpG+1ngz5GUsl
Jnv/Avn+9E1UoLf6ayrhvnw0m8zjXgkW2osnUAnud6nHdNChrG27u99RCRld
F/6L5PvWjIWyi5+pxONM7u8xaM7w0y8t2VTijYWWcyKZr23e+V43l0rE1X5d
ROZrV8JtQuXzqAQt71t5Lvl7DI8qC1YhlVjwLqPWo7vT7I5ZFlOJU48DClvQ
Fn+5tWp/YHuRevadaBMz1a0ZZVTCpU/Ucgh9ZF/MhHsVlVBq15qmkL+/cVUf
GKymEm8ztOu50VopDc2mtVRi7fGRsKVokODLU2+gErpP3YpWonfSXB5QW6kE
T+CVain0e1UBxpU2KvE0NqJiC1reOeFydzuVyPxvJlWOzFd6Wo8XdmH7UT4S
O9GiRVrivgNUYlAoPp1Ay4SlsqUGqUT9KlOFA2QeZyNSn/eXSuzcy/El8zOD
pcN+08NUYn+kZgOZH5xuOWkTMkol9MT4ysh8wT4pX1OBRSX+M6W+IPOH+0ef
sK0nqIS9cVLLKfRj8YU6rimc32iGNvn7ouhRm/dR01TCm5H2+DQ6Ob/aby+b
SljmG+WS+cfnYDWbBg6VCPV0KSTzkWLL15rOc1QiUG5dEpmf1O4UFBdYoBIW
Vw87kflKF7cHO5FCIy64rF5N5jEj9d11WjQa8TDlVpgtejb+yPsuLhrBWhE8
TeY3S90/+d3kphF2C8dUyLxHWGejjchiGjG47acRmQdJrX+omcFLI/Z5U46T
eZHi0LiY4VIaEbxtcjuZJ+3LPc3+t4xGZN57P0j6sP+POl9+GgHKuzzJPMr4
zI730gI04vk+71nSFxQi/PIFaYTaxOtjZJ51hcpjYy5EIyIEwnxJ366+rDmz
kka4JBtHkn4U0yT2ZDWN8Doz9P/87NlVTbaCMI1QEjP8fz725kBy3c+1NEJM
3Hc16Y9rhN/biNCI6l8BceTxCvpv+y0SpRHbayxXka7IHLSO3kAj7m+gnSP7
+9v3uKaaOI2QGbDyJ8/vj8kXsUYJGhHw7dFT8vwnt25hO/9HI9a/cLpHjg/X
XFCdgBSNGCji0yXzMMFyTupbaRqRs2A8Ro6vWNQFv4ObaYS4m547Of5bHSus
u7fQiLh3A63k/KgQezRvydIIgdOiGy+Q61soRmy9HI7HtU4NS7RFumud4XYa
kcA/vZHMTx28OlKHFWiEcotSO7lePIx0/B7soBEZxXUeZP4VMr1Bs0AZxztq
3ZET6Jcl3mKnd9OIhT/R9wzR754xZ2ZUaMS1xafC9dAlaoWpimp4vEkxMzLv
quff7vdLnUZEPeRbRuZdPW3h1rZ0GhEfMBimgZ6/bS/2UoNGuK1XOLwXvcyw
fkZtP40Q3X/FaTd6rSTUNR7A9cJr4qKE3lG40k/wEI0w2fdjNZl/0UMZ1kk6
NGL8r2TaJjLfte7X0NalEQbpFVv/I/M+FQOxniM0oiMo/S6Zh1svyZ65pUcj
HFo+Z6xF/w9ckoTi
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
emnu7N0jHMS216Eed9D/A0oxhdI=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvTrHIumWcKZ9CXvJ+ROXau3vPlu8fhbDdAcYf6dD
mtxMhuVwvryOyE2HH9vh/CXlioHh5w7C+fnd8aeDmo/D+WX/nNuVtpyF82cs
S2+cvvcinD+5luEB+/0rcP7KtTmdtz5eR6j3XjPp9PlbcL6q5P49y17fhfPd
VwUpB2Q+gPM7Stbz1l19iNB/rZRjYcJjOH/qe1Xj4ItP4PzEBfZ5vxKewfm7
/h46F/TyOZzPIGQQbxX+Es4X3cfGIP7kFZwvrnj8QlPYGzj/hfTHjY+fv0W4
73DLjq+F7+H8UwKN5acLPsD517u/zBKz+AjnRz+KCdP8hOCr8lctmbLiE0I9
+5mqqrzPcP7/20Iv1dW/wPn8NX33/d8j+Gmf9mVc2PwVzjd2edIpkf0N4d5E
O+Pbht/hfOHo3pLU1wh+q9ZED4+FP+D8e0dPLlma9hPOX2fzfcYpuV9wfmp9
pGjWMwR/8twNmhcX/Ibz2SftuTAh/A+cnxz09/8p2b9wvuk7o+NnriH470Pn
innO/wfnf5i854dsyn84f0tYhuVdXgZHGD/lZM+ujEIE//zK1ewR5xD82K8q
84o1GeH8+8t2VPj0IPgyx9zkO18g+IeeN/SwyDDB+emcu3/W+yP4AC12qbk=

          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, 
       AxesOrigin -> {0, 0.007240000000000001}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.704641984469862*^9, 3.704642036678155*^9, 
  3.704802610820726*^9, 3.704803239492588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "10"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7046427317152443`*^9, 3.704642755059299*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
DGjJbu2dICjv71XDPkYzBOh2n1sySVDQXfOE8u5meBXz7bXCFEGWgkg8sacZ
lBfsYi2fJmjDA0WXQF4z0K6Nao1SLOO6wuLkYDMcn/VK5vNfgkQvSOkpjjZD
x8d7i4/OEDRqNltpeKIZBoPGlNso7to7szB3uhlGOWC5/x9B9dojo4ECNJD4
++HjG4p/KfW2nxSmgShykaBR/HkZPV9xNg123x9/PvH/fvPcpk/D82jw+5C7
5v/7z0+myp/mitPgiNoi0kexZ3+e++NFNJDfmVv0k+Irv7POWCylQeMC8283
KLasStq7XpYG8fHPS6UpPohjNo6spMHTh7Ijr6j6dFMjFuetpYHwzfs6YhRv
iHoy9ViRBp0ZRyJOUP3JPHvItFCmwa5vQouCqf7FHtwqXa9GAysTmQ9JlF5j
LtdSR9RpcN1L3PQzpWe3zaWwvK00GFztKP3qD0ENZqc9g3RooIIyh+wp/fP3
Hr1waicNZkIN2aspf9K09x9S0qNBd/GpgZxRqr9lW5f/2keDSpaJQdwQ1d9c
FcEnh2jgenJx4OgAQZenVnNPGdPg7yN59gYqHwd+z88cNafBcXWtCgMqTzpV
Qm9+naJBUugnM5UegpTwxIMnZ2jgcsiyf5xN+RXVZbLhEg2OCrju2E3ldfRp
67Yxexpkt+kP53VSft2vWZXvSPXjP/5Z8Tflj00Oz/I6DepuuEI0lffPZmkN
GzxoQI/5ND+7gfJn78fvY3docGZrYssXaj7uKIX4BT+k/Ji1ydGamqfLy/yd
TvtRfrkkqkuUEGQx18tc+TEN/lwa58VS87et30GhIIQGmn+E9ntR8zqSsjtv
PIYG93M+HJ6h5p0VqfOxII4GaTtL37THE1T3dNOTpwk08GkprI98T1Cqi+xp
lXQa9Pp/7Wl9TZCD9vCE1S8aZOy46bzEnyDmz+jNRXQatPwsDIw6Q9DF0mXv
u7tosE55+o7VSYJ664OXifTQIOQhy2valKBBrqeQwSANuOd2JbTtIUhg0amG
PMEW6JfcJadIrZ8rLy1y/7G2BcziN7pw+vko+pp/f7tiC9zq1Lic3sVHircF
raeVW2Dt94aNZ9v5aONTsn+7ZgugtoSxU+V8tON7uWz27ha42p49vz2Oj06K
e+MMmxaYFfvz5x8LPmpfNqXZYNsCnck29dXGfHRW3vnj8OUWoOe9sPTZy0e2
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
mFBr9emq5xM+jjzyzoQkMMFqqZtQtg8fn39ydfJHCtUfSsr57UpdDxZKHDqV
xYRnf13mdx/h46EFJiS0iPr+mRwzjgAfi8yv3zqvm9Kre27P68M8nPp1qkaW
w4QrIRY3/PV42PKC/GXVHia8CXzPNN/Cwxk/3aKNeExY8e/V9mfLePjcNRnx
4FEmPL7tctWb2Y9x02nuYlEWXOXcT7dw7Mc3o7gvV65nQWJ3f2LqlT4sf1hS
a9MGFpQUCGg/tezDNZM6tUiFBSH/quRMDvZhpWMBYtabWPCZ9mLcUakPN4mq
ucZos4A7xy9yLaMXa152MVLax4Jd9x4H2R7qxTytmX/qdiyo9BnQvzK3Bwc6
SVqscmBB1P1vs2LGuFj1k3zG/Css2A9tp3OYXHxZ7qAtx4kFrWsneyK+cXHv
rPCa1+4sCKty/ylgx8XsGvUoMV8WkIKgca9cDu6wv6D/+wNV7+njIy4WbOwZ
6/667CMLzvn9CVfczcZyHQFjWZ9Y8Mvr8bsfKmxsaZL26Vky9XlG7VT4dDdu
1f4ntS+TBaLh9atE33TjJuEIVlohC+702d8roHXhqrcV3r5dLAAnA+0tO1h4
24VIhXdsFjxVgXPGq1g4WsW16AuXBfOb7h44LMTC17/Kzmb1s+Cj7b5sUszE
K+vsA3aOsqB6gD9ebsLEV0TmPBsS6YIrfZqhQmcZeP7lPe8s13fBYV8xv8dV
HXi/zs/szfZdUC4+eNf1aBMeybpjbMfrggSzH1Nr9VJxuAs9qvZSN2RU3y7y
bS9DJgFsvy67bpgV8mG4xakczY3pvzbu0A0Xzmf9HBeuQLfrJvTknLrBRfjr
klDVSnRWXZJp694Nxnn2J3VvViMlordWwK8bgnec/x03qw59tY+JVvvUDcmn
uIbTN5pQs/XFmID+bvj9Otj2HaMDeYuaH7jF74aec103/eU60eYEw0H7gW7o
Mg35Y3iyE/mPKKEDI93gGNV6QKemE+161Nc6e7obsk1ewPhpOnqf6CTlM48N
Y1Zkw7Y9DOQy7nHPS5kNQ9cP/d0kyEKrXzsoOamyIeO3QYn0ChaqAMvqM2ps
eOnQ+IylxUKK/jvlkAYbyqQNaWqXWah1hUD2Xx02dBonLPFvZCE9/YcDHvvZ
MD2nPmR3TBcSf/zkjJstG57PotWZKbPRITuxfafs2RDj+Urjoh4b+e+5u1nv
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
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVmHk8lN8XxylrEVqkpFSE7LRT95R2u9KKUqlsSVIoUtYvhUplSbZSEkpk
Ka4ossQstmSZZ8YyzPKoiJB+z+/5Z17v19zXc+8553M+586sPOVl5zJLRESE
FBUR+f9nbYo6f6DYBvn9+/9DorRQz2uTOXow/OILbYLiOS305OKcbXC+zyKc
QzH70u/pEpE9QB88MqeSYjw1W+dhjhUYuv12iKHYqioyd7P2AXAiNgRZUfwh
XG7XC5HDkLRB7YIIxWvNH3Ypth2D0tgenaczJEqUU7kcluME49viyzZTLDZM
Fw8AZzC4s3nxx78kMrF4YGuofRoi5swz20LxpbwjKdxFLuDmbLrt2TSJsuWX
DaWKnINW0WqpWRSzLvWuO8w7D5aT8zNtpkik1JoRPK/NDYpttWTvTpIoPFFL
KTDnAtRfFrcbnCBRT+Bvw6XmF8HH30T37ziJJvU62n3BGzzaBR1iFBvdTV6t
q+0DC8mEp0OjVHw7AusiVS+DQtv9TzW/SOT6y8mrb5Ev/Fvv/e7BTyp/9qve
J4tchd5FnvOlR6j4JcScx8euAve8/fVcIYnai/slDvD8INb7XqmZgETzlmbb
zWkLAJeC9/m7hkkU2KM/7JcTBLEfpRJSOSRKiFWIa0m7AWf5IdkMgkTH0v4s
VTIPhmsye+6N95Loiu33Sh+4CQ7wiKfYRaLct09ktLVDQFZBrCGHSaItt2N7
O56FQHelwzNPOom+nAkuCFcNhTtOr46vbCZR36JTR9iLwiBozkknp3oSKfup
P00UiYDDLblNepUkemGjeHXPtQiQM1yafKOcRBu0JPePjUWAovHyfVVlJLLr
5JI2vEjYaplqoVJEoijTVyZSbVGgcrRSem02iSZEjJlXcmJg9fsE9dQYEqnK
7Dl0xSAWJmUVpD9GkWjv4uPffItiwV423oURTqLGhx+9yk7EgVEnEVsdRKJl
uUO+pa53wQUto/V6kqj82+ZbxYH34dDKe/tE91H791abbay8DyEnay4o7yTR
QJ+lePGseLgon6iujqj8jjhHvouIhyPnZ6wk15PISSIqpujuA9hfx/8ooUqi
GaPOpLfPHkHD8bbPv34K0b1NZxyMuY/g+NnVvZICIVqzTajydm0C9KEtL+YO
CpHVvlnpBfkJICtrZsfuFKInJ9Y+f1OaCPWZbmaNH4UI3Q54m/81GQ48O5oc
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
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704642741455019*^9, 3.704642756834639*^9}, 
   3.7048026139416933`*^9, 3.704803242685981*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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

          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXyu6ptn2wPshRuNs2QkGuxr7+m/qlhd5wDj/2Aw
vly2ug/Ob3gqdWb11/lw/p0vjQdP7l0O57/eeWXn4cj1cH5AiG5UztnNcH65
cdeakuXb4fyC5QwNXFd2w/mPbZ4lKr/dD+cL3i3iuXv/IJwvnVavkf/pMJzP
/VhC/8DDo3D+jg8v9wQdPw7nnzvhzq1z7SScf3qKkcuRg6fhfEPtVbaLr52F
80OCIvcdfngezl+/7dSUi08uwPkZmutXpby9COeLiN0yDX9yCc7/mu6t+Pb9
ZTjfpCniwuJvV+D8dLE1X3a+vopwH79bZfHXa3C+ZrNacc/b63D+o32LDI49
uAHnX4hP9Vv84iacv7Eq7+H9e7fg/GO/9l7Z//I2nG/lvLL7wPs7cP5C1tvb
FZ7chfNtdYNdVN7eg/PPnBN0a39yH86PkdnW2pr9AM5/09wmIfkewS/T+JV6
J/MhnD/r/4Tkj+8Q/B3Cp6XNsh/B+aw8l025nyL4b83+/TfMfIwIj3lnWjqe
IPielvt2GmQ9gfO/bK8NyHyL4M8ofrDwYvpTOP96Ytri7jcIPn9vf3xpxjOE
e+e01b5/iOBX3FvgvTv1OZxfHBt3ZdsDBP+fCWNatOoLOL+LZ8n3/5kIPgCA
nVZf
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, 
       AxesOrigin -> {0, 0.007690000000000001}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704642741455019*^9, 3.704642756834639*^9}, 
   3.7048026139416933`*^9, 3.704803242933976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "5"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "16000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704642802659071*^9, 3.704642870813011*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVmHc8le8bx6WMrwiVImWnhVQikvtCKaUt0SKjSCklLREpo1IqQhqkjOyV
ddzWOQqHIntvxxm3rFTG7/mdf87r/Xqec5/r+lyf616KtpePOPDz8fEJzufj
+/83e3TazOTcVlQ/O0d9CKr+JKy6M2oJLG2ocxih+Keoh5VMlDJ4fpnfWkyx
IWPs3TNXdZht3mPqRnEj3jo2P2oLbNZ6kipEcVCkaygK2AZ181IlPGYJ2nkr
SfeO6w5oC7/u9GOGoNkEN5dWNUNInmPkCVFsFb4Y/rw3hqmJQwvkpwnK9EuV
XC5lAs0TnbuW/yNIwv1Ar1bAHhi2VvQa+UOQsz0n88jMXuBsepeSMEUQ40jg
wyuu++Gb81TDrt8EKRqutQzqPwjWX1ZPFE8QVLi8d2mD2mGIPLryP/lxglYI
eg+MvT8KS+T7JD1GCNozc7CGv9UcrNI0BTx4BF0fl8uRlLKAeNFhzikOQd97
CgI2BliC+Dv358WDVPzNj64alFqByZTPwV39BKn9OHFy/8wJYO8TnovvIcgP
T6k5u54Gs79Dm5a1U/lkl0vd/nwGxl12p65qIagnKXTWv98auiObZAUbCZI/
sMKxTu0syFhM0m59J+i2fo7ur/d2EOz9dj6nmCDJHPnkqR328PdkS+tfGkFx
W/yU+FrtwaboVeRwLkH16y0WikudAxOv3d8vphGkKTPephbgCMuEdDv/vSWo
/OXJw1qqTtBWHlQrGUHQGYlS+vZSJ+gMe/5BOISgx0LPk/fOXADaOo+WsECC
Bic23nN0vQSZEmJ3jN0I8nR9NX55kQt8O7Bf38aFoKXcWccbn10gP676x2lH
goz6mIcf9l+Gc2pn3P6dJOggK0uyVs0VIrs5bkWGBCU0Hu0l76+BmXCo2RUh
ghRepe9bNHkNHqm+eEhmeSjUQjJTbZ8btDosFNo7yUM+9dW+ThNu0P4rsvFZ
Hw9Z1Zmq9pq6Q0Nkva8D5iHhGuTUMHoTBk4LkXUuPOQZ9PbH+O5bsG4/39gp
Ox4a3z+ju+TNLVBnPtngbMlDnVV5Iod23wZ+FV1NGSMeyq7Ymvjt9R3gXBF6
kL+EhxwYG0jBTk84pOmmJpPKRS0PAo+3hnuCjHX7jrloLjq0i4X/8DzBS+mq
V1EIF+mXfXqmHe4FVfwbw37e5iKRbgmZJvd7ENKoftTYmIu6Ox7lHa70hkN7
XizXZ3LQsxbvmZ1uviB38/D3JDobffz1ZyN/pC/oPhnz3ZDFRnnCV21xqS8M
ZdvfCohhoz5t23LdJQ+gvrhMe8CHjba9MArWSH8A40u2xSgbsFH3vvmrpUce
Qk7l78cZycNoM83XjO0cAK2W/9FP3WSh3T+nPeNeBAA7p22U2LHQKbZbmkN+
ANiWXLWzP8hCD2UclnWJBMKd9iDdX6tZqOX6rq6f8YGwOshELPLHEPLREHQr
HHwESnzrWwyVh1DdO7/XwXZBEPq9n6edOoCWndJBfoFBkN4YYOMXNoAspQd7
PNKC4GYYR7ng3gDqeGay3nEuCPxJCrv20AAa9hbINXj9FHIWHfv4hfSjeemG
7OtOzyBnQ/ujy2v7kfRLLKwcFQzToj6rtz7sRSaW+cZ3JV7Cp/KUvuhfnah2
clXx29UvweOuolFjaic6E3LPoEjvJdgxueYtlzuRe+0u3fkOL8EkYO3cfm4H
+mT2XSMg9yU4hTqaTPS3IyHDfpkQ2xDYqXD3+8vqVvR1nfhIYmYovCoV6C30
akSm/2wj2yzD4W+m1wH0qwo9DVAs/GfyFpKDW4tCbeOxgcyebtuaKLgimJzz
iVePWzvfBnc1R4E9bT5bbGsDvvlpwvBMXxQstsKyR+404IwtH6Kt/kRBbKlE
3WWhRrz2wKzdIeVoEE8Z3jCxqgkvuZ85sONGNIST5HdM4xY8xFHgSMt/gLK6
PYJ8Vzrwg4wbkaHrPoAn53q7cVoHVrpdbbZU6wOUm2q4W4524NNCHkniph/g
69ukgNFrnbhWsdFF8NoHiDyRfuSKXhemWTz5NcagxrsozkvU7sbPi/5MVrvE
wPAnlXUmsr1YMKtHNexmDITt2vjus3Yvvh1faXHWJwbmzA/qTR3uxbbP32SP
hcTASrNyVxP/XrzJ3tBdmhYD773OjmWM9eLvQgETZxd+hGOmDscL6H1Y7KD0
+HjsR9g8duRa87EBfM94nkph2kf4+Wfd3OilATyuM3zUL/8jPP5D8kceDOA2
hYIMmZqPkGKTeScsawAnjlpfM5j8CNoX9cVeLRnEe0NjR/12foKijeljUDGI
/du1f63o/gRqW2h8zYosvGlzv/sX9idYV4ojJLexcMvDF9NHJz+Boqw0WnOA
hdU0R4SeLIyFba/pl1i3WPiHT7zc3NZYqP+yrau8hoVXrF1p1hsYCxePLJ/q
dhvGpR4VP7xCYuHWtRPL+v2H8cUfN4+vfB8L8z6l3i6LHMaFt+ttj2XFwiXz
ct7ysmFsxwy6Vd4ZC1Kn+XwlJNk48eq82M9acVAU2ilrGMPGx8pT1PagONiZ
4hi8IJuNZ2XPpPeZxsHI0oXVH8rZ+BA9j7bKOg6+5PA9uD7MxhPL3X4+DYiD
jI2bDjtocLABbWCeW0ccSFxnmVxN4eAfQlWn9P3jwUjQ9sT6UC4+FChqq/I8
HpICU694RXPxd9H950Uj42HBdst3mckUS1a7tqXEw73V/saYwcXVst8fejTG
w3c7HHlsgourNv5MLVBNAFim5v/QjIfN0pdmx2gmgPqm9EXtFjxcqXUs/7Fe
AsTcqklacpaHK3Qb6KcOJEBVn8k2xes8/M24qWX6egJsXnTqBe01DzOOty3Y
QU+AMNFTMtM9PGzSslJkdU0C9E989DdnU89PnRYXa06AOEzknozxMP1sh0w7
JwG+xLHL3s4nuMy5S+Pu0s/gkcqV2qlE8E6egpaD3GeYHOlre7OO4NIrZ3X3
r/0MX5wv/GzUJLjkeo/xKv3PEHz8ywmOAcHFXn2WNLvP8OJMz+ArK4KBf/WZ
j5c+g3Fi4vExa4KLfB3sntz4DL+dVvJvPEdxwMCl048+g9/ybaK7rxJc+GLI
Zyb9M3yiC6/660+wwbJ1/v0Fn0GpX9X/eBD1PMzpCZPxGcKZVttCXhBMezP8
6k3LZ/DsuXAx7Q3BBbGcxB38iZC++OjOS6kE+y25Uz22MBEueDnBl0yCj3j9
NxIvlQjBq06V9+QQPGShumXZukQYO5Ryq6OI4IySTPOqzYngsbLuU3IZwZ4a
xu4++olgEn/e1uYrwVKCNrm8g4nQ9nafv2MNwV2uvJYYq0So9784XlhLcGK7
x/QJu0TQ00wZnawn2CgrHJW7J8KNvIb4hW0EiymuPXv3XiKYyT22H+oguOlx
ts+WwEQImJuX9ambYBf7Ovq7N4mw1TlO5usAwbrfzw4ei02ErkNTGhtYBC/Q
HxEWTUsEOVuLtstsgmtiPdeX5CVCbIGFUiiX4IglYmY3yxJhHS1y3ltCsIPX
60sa1YmwcF/Pbb9fBGuy1z3ta0wEG3kSdGSM4PISk9pD7ESorewMeDJJ8HON
+jHBiUR4/zLedeY3wWci7KRos4mg2SA1eeAPwesER7WvCSeBxkPr5T5/CR53
vWe5bnESlG3JrQ/9RzBuX3S7UzYJ9GvMNz2ZJjjQ9M3rkNVJEOvqvN5hhuBj
WRto+zYmgbfKrmK5WYIVFPM65ukmwUcPmMylmP14D1+OURI0b6j4pj1HcPZU
g6KLWRIssdLUD6HY297BWMUiCfq1w/bXU2z2fcy+xToJ1tULzE5SvFzf5+Ez
pyT4omu//y/FPbEScSbXkkDm1pPtnRQnL3n3bdojCQxrjnz9SPEtL3V2+sMk
MMjxHdtP8U52vqjTsyQYEf5X0EjFI3F8r4Z8RBJgoTcqxhS3ljQdrP+QBE2W
TuufUfl80jjv+igpCe5FX6oupPJ1jZh4bvglCTyLwyRqKD30BX0zfxclwcWO
lJEiSi+hq4sbkiqSIMLTwuUlpWdt+/vfdj+T4Hf3sgDTKYLfmG6UWdGRBP9s
LkAXVQ/HLJre98EkeFFR/MJyguAtimanHv5KgoUlT3zSqfrNPm65q/8vCaZW
7hblUfX9NuX4bnRBMigb3tBcOELwS/vfRXGLkmH70SLefzyCN+gvXSCllAzP
IvZsS6T8NBkbvbpyQzLE/HtYcnCQ6uclm3Z7b02G9Nbmvp99BFuy9wdy9yTD
EZ1rvPudBPtG+EkwLieDV0nVtFsdxeda/Q7eToZW5rEvrVQ/PNi8ca7JNxmu
HKW9lasi+GFFA5cdngynppVHtlH95Pd3daVkWTKobHC5idMJ9mfcMnpdnQw6
/eo3hJIpfs7MVWlOhkB+zbAN8RSvvx6nw6OeW+zSF35H+elE2YPT0ikgb2XG
WhxAsar0zIBSCog09Ndvv0/wo1FntyvqKbC8dmcz3CX4ceASu/tGKVBx8ueq
zisEB+XZQvzFFPDP63W/aEFw8Ip5/8aLUgB7tEp8W0H5f8D8qmdlCuj2T6en
L6Y4PY4l1JAClRvrjt4UoXjvoaYV7BR4mnfr0as/PLyXVnPivUgqfF9w4dPq
Bmr+5sptY2ilQtNZPScvf4rrvo6J6KWCua7ZobWeFOdeTTmIUmH+8wjFpGs8
vP8BQ7XZNBVMf0167T3DwwdWuUhxzqRCxGD4yp+bePjgftqoZEDq//d755Vq
uVhvr6bL9BNq/Dy+KFtqPVHd/YE18DwVMrlezvfzuHgaArryI1MhS7Es6xy1
HiVoHat2SKV4hZZa5hUuFlzJjc9tTAU53ZsuzkJcPCptszqmLRU2XaAvy/rD
we1Sde+DulPh4OsMm042B2eK576yY6eCdOqD7voaDrad/+CB2FwqPLdf1rA3
lIMLh1eePauaBvEiV+otVnFwwuDTtn0b0mCam1P2WYyDQ/r4LbU104CuGXm/
e4aNL3YMHViolwatBqfvkXY2XlGbqZ+1Pw2EQ4JISCQbu+eaSf93PQ2iL8F8
yaVsrOHvUZNamgbbWyRWcdgsrLW1dmLBtzRI2RQkWNzAwno9a1ZaVadBwZro
PVeLWdhEv85xXnMa7Ll97r8LoSxsPbKO/wgvDdIYKuMpBiz8zLJRa0w6HUwe
nUDR/kN4dO3miK0u6XD4xrU/r/gHcfa3Qfs86QxoFjKvi3tB7b+c7cMnVmWA
Nq5pznHvxYvEupmayhnw+vBK9USrXnzuUIt2rHoGJNeqGu6Q78VSjVXCL40y
QEMlo0c0vge79aUlXrqYATtU0xZ6f+nGm+fujCsUZcAeVkTpE+9OnKQl4et3
PhNs10QnbVvZiN1PeIaUvcsCLVFyI/NKDh56GGZ9cTQbIoXeWucWfkPrXaZk
fTVy4L76i6II93bU86ZqdceWHFjw229NX247imC+37hNNweWb9Sjz0y3o//U
TY05xjnAlfmh9N6nAw2xwy+YW+VA0A69kdBHneij0/ZcFd8cKA1Jipn51oUU
HDwt6M05oBMU1SJb2IOaXh6xke/MAUYEzfNiWw96VqZ64VZfDrxajBre/e1B
c8o1d9VJDvynvHphsnYv6uiR/xiyIBeGF655Zp/Ui17bFI85bMyFlRZ+m2RD
+qjzyoJgwQe5EPt2dXmV2QByuzcXtzswF0SDJP9+OTeAfsT8LfJ/mgtqZtuV
71Pnl8fckRGRiFxY9MJtKidjAPF7tR8ST8kFrP9L7r30IOJGZUtIN1O/L5Yz
Nm0bRGWDjs/WqecBPeqwkddeFlIStY+7sDkP7mR2HDe0YSEvTeuizzp58IDc
Eum+zkJ6t46NqBvlgeahIYnc9yyUImJ0aPPxPDBLXWFQMc5CEeqyEtu98wB6
d5WfCx1GrteYT83qKeYc4Rpj6ryYHHx+S0seCIyION2pYSP+4WNoRWceVEcP
jr7oZKOXNh28waE8YFolyTvOsVH2frL//nQemIbUXYjcwUHTayRF85TzQdXd
5dOmTA7aZVff+35tPkTfsja6WcJBQW/D8/3U88GlPCn73XcOkpdScj6mkw9+
eU/lgzkcZMS/pWJkbz5MmxvmzyhxkX+buf+aq/nQyPEumA7goh/LZWwW3cgH
6IiROBTKRSuOtutM3MmHyAlHVV/qPP35m8NgyYN8GNh972VQHhdVZ7ubnAnP
h6r3apfVWFy0JDhsQUhRPqiltMx7DDx0qupU2x16Poxoah5l7+WhGCHFTNuK
fBjedNZhwzEe0vaMt9P8mQ+iDMfq/U48ZOmcV1I5mA8T7l502Wc89HZX2z1+
8QLQoqvz2hp5iH/T/flHlxbAFqHbBdNd1Pl/5fqHH2QKoF3sfOdvFg+pjd14
tFOlAG5xMtfe+8dDue+XhD7ULQANM09e00qCVj7Ok240KIB396b86lQIunfj
7Os1OwtAeOd+73g1gkwOpLz/eqAAZJ0jIga3E/Tz397PIvYFsFPqcViiJUE6
g7/UTzoVgJhgrI2PNUERtWGpn10KgO7jGrLlHEFn4weyzG4VgJUse+/aawTx
LHyKgoIKYH797JKTjwg6YrTOuPNFAThsnnMRDSYoS/07fWN4ARwX7jEODyXI
Y4Fc5fcPBSB4IM5mVxRB/6Xn1i/OLaD05AYMZhJ08Y2NpV1hAbA9G5rccgn6
7i/UmlFaAN4h3xLbaQSFWh/rMq8uAIlEjWFDBkF/907bfqwrgL5WE4sdFQSd
1v7QP9FUAB/5K8yWVhOkIvZrOLS3AO48Z7WZ1xPkN/Xq0uBQAay5f+JmYRNB
w70GIzq8AtA89ztqfhtBaXmPJ5qmCiD49NQHhR6Cln7acnPdbAG8ftfiOdVH
0M3glr+35tOg4n0R5/MgQQaOa/lkF9FAZjjmwUcOQdFHa3ycl9Dg5X3ldDaP
IAHkLlAgTYOSsCI3sV8EOa5f5S8qR4NFzSNMkTGCqqTKRE4r00DUUKmwd5yg
jfOcnyStpVHz37ddYZMEPedISsyq0yDP9JLD2imCJhtznh/YQoOPzdmrqP0S
siq1lnq3jQY9Ercvt/4lqCBZMIzsoMH8q6EnZ/8RpBCRtAKMacAfktgzPU3Q
/Qfmb57toUEufYVA4wxBA1f+yXfvp8EF/oWlj2cJ2nsqOnrTURqEz/deKTdH
UNJu09U+ljToM3aUfESxxJaR2NrTNOgQio6qo9hN7tV6ZTsa9DosYf6muERB
6JKMIw3kawVzpiiWVL6RIn6JBlsWHmQ1U2yzevCXwFUavPaRP/ua4uQ1x7Wm
3an8EhjyOyieWVfuPnqHiu/xldWYisdMTSd36B4NahdIXlWkOEIj9l/HA+p9
s0sC9lT8LM3lBvWBNAg8ptr5kMpv2xa/e5VPaRCvWDobQOX/cOvvkuKXNEiX
y7e7ROlTr3NeICecBme97oltovRT0WvcnfyWBrdDAv/9/E3QVf3dgTEfaJC1
wUbditK/2OBLVUQcDaI6o6JpVH3OGL867JdOA6/YVxZrqHom7hJ6efcLDawO
D71UIwT9232j4VoBDWJNHkkt5hIUZnb8pA2DBsu05rXeHaL0PlD+xqKSBtfb
lOQWDBC09bBOl9l3GvxSNn1/oZeg2mPLHXRbaPD2cdXppnaqfpZ+sRs7adCw
0OpVZwtBl0/8Zq3uo4FN82nR8kaCRK0bXRbzaNAsde2T9g+Cdju+usmeVwh/
t/P5hZVQ/XJBKL9bsBAGn3zxiyokqO/ijZnGhYUw5BdaEJhHkI/rcZ8yqULI
YcXRZtIo/9xe/vjNukIgWuYzDu8IErnrV/1CoxC8vM28rkRQfvP6LRG4pRC+
PBtUOxlC+fF+Y4j7jkJYatIo8COQIM0nr94dPFwIrv6rHhr8/372qVDPLotC
GNUQN9jrQhAz+IaK/slCaj8cuEzbkaALocfj1zoUwuXfQquTTxL08d3yjHm3
CsFC7324vCFBK9JfMTLeF4Kj8JM4QUGCFsVrLA/+WAi/0tRl9Gep+fI9/bxL
QiFI/5n8eWSSh9hPxoTXZRaCnvzRdSoDPFTgdHDf2/JCiHp8TsmijIesFYW+
+/MKwV7x07XJ2zxkLv1W4dxYISwybV0Orjy0R3yrq/FUIWQ5/Td14TwPac7Y
Lp6dhyE5d5OT/VHq/5oLza9JUcd4ee25/nXUfP/Mvfm0PgbVNMJU/sFFYX5i
67cbYuiVv77Am85FTzxjbkubYAg3ML+Gc7nI/WKtbN1BDCI+CtOdUVy0e4/G
mT12GDzf9TNTrnDR8Fx/z+ZADOO7V659JMxFGy8f4wg1YRD8JdG0XZGDDJbV
DB5ox3BDekLaVYKDzGh7ekN6MPxZVXTeh1pPLyzUb1HmYrjwvMRIt52N6o5K
9snPKwLNyiMPpkLZSHzk94/ty4pAzEIvp2Q+G/mtpSddgyLw96gvppWw0KJp
7w3LjYvguhwvyyeJhUJrDOLzdhUBNMhVqISx0Ef3nJh5+6j36RkP+S6xUGnZ
59dPjxXBett5NculWGjO5nnA5wvU+E5LgmrPDKEb4dYOvS+LgPXXJm+kidrf
TPGVWr0qgv+cr5xTLx5AV49HK3wPLwK1pXMf9scPoItS/a0Fb4sgSjJLTvfW
ALIJvnAkNK4Itr5O0ilcPoBMA64j04Ii+DYevezFwX4ke+uRTEpvEfCkw5sF
PvcibPmFeXtzMfDWVDQNLOtCFeIVfKpbi+EVveKqL6cT/WS0bfmhUwzr86qe
Cn/uRENa/BFrdhQDX8ydvbfXdKLFkvvP/dxdDIubdBvF5DrQuW89s+qni2Eg
LCRqD38bWqS3SLPbrxgOPBU1ZsQ3olOyDs93txeDnnnL0VppJkq9+kt20rcE
PArbnpc3pOJLse/fnlIshYj+7OvGZ+rxgYKVi+arlEJz1seSpI/1WONH2N14
1VLQ+amvMcGpx7y/z05NbiiFEwckP8vcacBXDniveKZdCqex7PGkkEZ8deJs
aOm+UshJXtofVdqM3Y2Vg9a7l0IoR+cDd64dW1i+m/l+sxTEZAtCNI06sPYl
2Us37pRCm1XMoLFvB/4dusSs7F4pOH1r0WkR6sQ3h+eLnHlUCu4FiHFasAvf
Du57EPy+FBq3KF33FuzGnp0f705VlILxU/3Cz6M9+KeXINOVWQrFP8/f9l3U
i9crnF/JrimFr79sJo3X9+IGm7X57T+pfG9F5rmf7cXqPQlTJR2l8KmVeTqu
uhe39aVcezJaCrskZuaUY/rw9uFcJ6UVZdCw08isUm8APwtckft6ZRlcGrov
bXp0AA+svyMsJV8GuyxdHyU4D+DnzvqxQiplMHjn1FLpyAE8zCns46iXQfGL
ieev/w3gCFJq/cWwDDLezQloZQ3iqXHmMTOnMmh6scxeezELR4kbqeU6l8HW
j84X3qqy8N712fyqLmUw/EPbmKXHwq+t36bMXS2D2k3NaI0dCxtUuPyX4VEG
fxVidIzTWdj3nThN5lkZTIvvtxzdO4wl9h5WGcwug8R7DLFRBzbOtaf/PZpb
Bq87vz2OdmdjWy/dH0X5ZbC2IaZZy4+NMzIVPSOKygBmDL7OxrKxhfxo4/6K
MvA/X3RlzRAbR44/f5TZXgbRL3PQV1sOXvfu56j3AjqIFS69tsmQi7sk894q
C9HhlHjh9w0HuTjU991e+n90uET2bOQ/zcX8Fy5EC4vT4cFaI5bRTS5u0eI7
8lSGDnnJFpuWJnFxYMWGtEgNOnxFc74T4jwMOyRPG2yiQ2GT4eMUWR6eTJkU
7tpCh6iR7ke71vCwbUixjbIuHRip0dcFDHh4u81xiQRjOvSU1vDVO/EwZ8Ln
8hdLOkyXrniVkcfD0Y6OslYn6XBiSPaKehkPW7buL/97mg5TWpsP3GfycFmR
tLyBHR0Ex5rlSjt5+M2j5OqyS3SYiXbb9oKfYPPZF7fPXaGDr1qONVeEYBHX
W6rC1+jgPlwXqryEYHeLnZ77btJh8f59eirKBB9QbFGv9aGDuJilj7shwQte
4uZrD+hwddr9aNoegvMEPz6Q8qdDxNd2+HqQYFXO5XbLJ3RYH7jVPfA0wbPZ
Ak86X9EhdljMzeYGwZnr2Nu8I+jw6G/LIY+7BF+I/N6n9IYOCc1XLdzuE9zg
/Vr/XDQdxhq1eqaCCE4x28ThJNLBze28knkMwS17/904m0IH+4Lk6ek4ggVN
6fMb0uiwNdk66WESwWd2WcnibDocebvylX42wYHGyrFbcumQ+xvXOuYRnGXI
3RyXT4eGP2Ws64UEixp47w0uooNsd1fSZgbB2/T3NQiUUhxCO9XzjWB7PSnb
23Q6WJ4LGb7KJDhfO/6WXQUd1jh5f9L+ScW/8Ufc1p90OGbUl7Oni+BQ9dda
CQ10KNBpujnXQ3DJBociuWY67DgoKf+qn2CZtX8ahTroUPy1TsFpmOCdqqV2
Hl2U3hUudz9wCL6i8oSM9NCBf493SSGP4K8KikItg3SokhcQDhsleFyO/fzA
MB3OOTz9z2KcYIVVWXKlHDr8Xlo7MT5BsJmsV4IOoYOWzGOm22+Cb8iYaif+
osO2LzbB9VMERy9fUqIwTvmdyzBc/pfgaqn2/SGTdNi5WrJT9x/Bf5fENv/3
hw4B/teddkxT9Vzs6uD5jw4aB5d1K84QfERi+6/RGTrQFouYDFLsuUjg7nk+
BnjL24c9mSU4QbRGuI2fAcsZ+k1L5wiuFwl/eUiAATOJuQJ3Keb7z06BLsQA
BaVligyK1YTUE3VFGCAhFr9+hGJLgd86yaIM6JZgKP2j2Hd+camSOAOClr34
b5Di1HmPDr6SZMC7epHODIrb5sxbFy5lgDxd4MNZioVn5c7fW8aAWFHjYyNU
PFumh0bHpRlgfd11wpriM3/TPZ1kGTD/5Lb7qVT8gVMeIh2rGMCLhNluKt/s
SZPQIwoMWPl0x7lxSo+ecQmlciUGqLMn8gYpvRaNtSRtX80ATrTZdP4fgvV+
xeimrqHi19Jd70rpe4640FXWM+AFfr5TiNI/mLvtcLgaA+Jt+fZ5UvUpYPO3
i21kgOB//DsaxggeYlU5+mxiwP2iPzLiVH1hwOaeszYDivQmg5Wp+l/sWy/a
tY0BzzPvbphjExzWM/7KfDsDhsyXJOWzCCYd/ik7gNI3st+hsY/gFe1Htqcb
Ufq+WhOpTfnPpHVlueouBkQw7HLcOwl+25jaIb6XAStaV70Pbya4UZ2Dcs0Y
kL1FelqngWAJ3zVRtgcZEOmxtTytlmAfzbd2WeYM+B1s+VGnkvL/w+ayM8cZ
8FcjKsu4nPJj21JV4RMM2JyVvHFDKZV/wKOhE9YMeNRXf+ox1W/vOhmmC2yp
8YoEFglS/di0lf9zkj0DOmoLVE6mEby35+YlvgsM8J8/7PEqluCN28+NfnRj
wAbGxgTL5wQ7BkcdPXiDAewwy5NJjyn/DrZlTt1iQFRuhEP7Q4KXvjx6Y58X
A5K6o+7V3CZ4igPTIwEMOKj27eM/G4KL3soK6r9jwNZeBfWrqgT/Gbc43x/F
AIGOuaw7cgRv3vf8a1AMAwIHfnraLCM45rfwo+54yl8HDnzLFyDY/9CkuF8m
A8JK7kjl9vDwIf4fMrXfGEAy5l9ghvBwgKXonTtVDFidvWZn4CMeLkne3aZS
w4DaXXV7lLx5WOtk4dsbPxlQcF2jpteZh6UzPyuv6mTAxkNOuYmIh7sdHqo7
jjOAf+l7t2NdXPxs9yeXvknKb1yx1oifXGywjpFi84fya+5CuaKvXBzJEdhs
NcuAesXDegmpXGxx7YH2XuFyOL/vbuO0JxdX3fNFaivLIUNpnmOkFBffsY25
FydXDuTE1qFOIS5ev7OsWEWxHJoLVpnP/8vBfkILdq5SLYdbDmq/We0cbBR0
f88izXIw8uqP1Y7h4C+vfQ6PGJdDdL/CaM16Dj53N/r5RZNyUJlZZ7FEloOX
WpfUDe0phz2ca3XaCzn4qhK/Rff+cjj9e2SdHJuN1eK9T9QeL4eK7NNFLvFs
HJ19zy7TuRyGV5b8kVVg4yc/PK/ffFEOfm6t5nUTLByknr5jKKScWj/NFfx7
WPhZQL+AZVg59IvXLpGvYeGXhmahOm/K4XKeQvhYLAtHpMl8mfxUDsWROTrb
LFn4U3DmlFteOSxiTZ/RzRjChYeH77h2l4OW0laXa0cHcVHSqp3dveUw7jGy
2ld/EBf/d1j08EA5KBXrxN9cPYjLir9EarLL4cyG9ONivwdwxaYHNDJeDgI1
Z40GwwZwo6TC3CXhr1CALdwuNfbjkR/HfC5s/Ap+p35oHIU+PPfgr7z45q+w
6+62hHLlPrxI7x0tQ+srTLsZSMoJ9WG16KGpad2v4BobpOLK7MXnr965/HTn
V+hYKMuXadmLOxZHncq0+gotavyFFU49uOooR3v2/lc4LrvpOdzownH1Puzg
pq/gv6jtlnhwE/6WXbvf1f0bdM0/soh/koYNXt8UfahYAQf6pusyncqR89KZ
px7fKmD5/VQlg3PtiJFGTEllBUQKE8WWD+1I4WDPfNvqCnjCJ7b9QHc7+hlQ
fmN3XQXoy65+TjvZgQzmgq0Xt1eACd/6H6kHOpHEsOrGuJEKWLn9i+ux0C6U
jQ9V1y2vBMvaFxL+dj1I4rSxv8mKSlg6kyz/0qsHXfi71Sh3ZSV86jst4v+6
B8lvlc1+q1gJM59+/VOt60H+Cf1vnDZUQtOWFAUDw150MuT2pTmDSviZViCa
K92H+JxjRDecq4TaDufwDZn9yNFGOLLWsRIy+D/clqrpRzXHLm647VwJv/zf
63Wy+tFb0Nr77UolZD9qH5aUH0A7lpX5nb9TCc5mKzb+8htAt4t7+WOeVVL7
4bVN3kcH0cRy5T8r8ytBbU7vvyM/htApMT//MloluP0NKBYZGkJl/OzlF4sq
IT3gX/L72SH0kpuunU+vhCEB5rDdBhbaXGrkZvW9EgKQ4x6T+yx0xcWWhPRX
gl2azXMXtWE0XBbVv0iiCkqL00yn7diofNewecDiKpjt7Xgndp2NYhiby+ZL
VcHIuaZLcw/YyPprafSUTBUIqMec9I1lo5+V/dY9ylXwevLNyGIWG+HadS1Z
OlUghHyF0DkOijx61VRTrwoG7b1jjl3noNs/83IS9KtAYoLtZubLQVoN+169
M6wC12Lmh5YoDkpovmQesK8KKgJvc2+2ctDLrrTqU9ZVsIlv0Dh/Dxe5nv27
o/FsFYjxKU3WHeOiAz1GSYftq0CLm5NXZctF//XVPTJxqoLYD0z3Mx5c5Dk4
sUfzWhW0qqJo/mQucuTpls73q4LCiDd79y/koV2XfTZ7BlTBj2/RteeW8ZDS
SEXU1KMqyE+QPGejyEPtv07e4z6rgmWpF1PHtHnoyMTdHY0RVaD4rLQjwoaH
dkwXf0lIroJkgSRpThIPufxelSydVgX+CUYSzdk89Hb0VszDjCqQfaFyMhbz
0OzQpmDbnCqouj/FG/zOQ4X1URdWlFRB5cIojT+/eIj3fcbGv6wK9F6SjpE/
PCRXZXV8kkHpa0SGv80jyKtEcmdtJaVvBEtGQZIgSPFeFVhfBeuWi42e0iDo
SkL7kqnGKnCU1HprvZWg9x91Rc61VAFaF5tirE8QX+SvScPOKpAbShZKNSWo
2P/s9z9DVZBtciZRxo6g0fs0xnl2FaxJXByzxokgJS8ZWj23CgqCV4ssv0yQ
z/Uf8WmjVXDDQ1E14jZBRraG952mqyCyo7l00zOCrp5+c6txtgqqWSeO7gsh
KNryz+Vd85jwQTTupEkEQfwH004pCjLhfWlgS9cHgkq3K2o3izMhqrcrITaL
oHHtu2q7FzNhk4CkLDOXIJXNzUpZS5nQE85e+JNGkO/aYPFgGSb4J066PaQT
tFNqHmuPMhOuFSnev1tHkJvE6c7s1Uxo3d2/PKWBoJiFufUqa5lw27pHq6SZ
IAF+1xI+dSZse2It8qSTIO2ZqhyXjUxIznxUtrOHoHNTa1PaNjHhcoW5SEcf
QQxe1+scbSbUZZnoZ7EImmTpP1fVZcLYYOO6MTZBqv1h/i+3M+FCz+DHxTyC
LLrGPfkNmMC3djR1yQhBD1sPXb8CTOjdeX7f5C+CshsSnTuMmGB8MON63hhB
Az+Ebc12MWH6/E5NmwmCljHtLfN2M0Fve/CdwUmCdn8tOrB2LxNa7slbHpqi
8pcNWlFpxgTBh8g16w9BJS4nBy4dZILDCbXcyb8EzRWvTZc4QsX3zE5z6TRB
+lKTdzPMmSB7f3uj2AxBtx1LTS2OM8E7gpPUS/GX/GdSf6yYUB0RkRkyS+m/
6Ez361NM8GKfZivPEbTZdkOSgTUT0rrNjgRRfCVr6mb3WSaQ/x6wfv7/fliY
sdPXngl2V7XS/n//O3zyhcSa80z4dD46fpLitSk2bd+cmGBSL173g+Jz/Bpx
Fy8yYdUOP/UAij8c+3dN/DKVv2lPzkqKu+K+onRXJljubnD7/3203HTIwmNu
TJgJ4zvbRMV76qBd4293JmRvHvPgozg8WvNDxC0mzJMw/LqAyrdhYsZlhwcT
cj4HGvVTeiw1rdTr8mQC80YgO4rS60hkmOB9bya0bVlVqkfp+ZQ41K72ZcJX
J6lvKZTeIqF8F5wDmPDgodUZDao+e1jMrYseMyGSBxwdqn4P9F/PSwtiwgZu
18dVhOqn3q3hky+YcMYlPuzuMEEG2vMdwkOZABnLv/8eJOhOwHdN/XAmrFEf
2Hign/LPRuev3m+ZILHH6txTyn9a97e9VIliwjdv/+232whybRCwKf/AhN/a
C7UNKb9yPN7/Fo1nQubKXaF2tQSt/36pNOUzE/5VuvwprCbovPL2p0eSmfDS
lu0xWUFQz7d61bAMJgy+Ven6U0KQwqoPo3rZTNAZb6TRCwk6feVKYXsOE8oq
o75cyiOoadlCC+VCJrgrPP57OI2gajt4kPyVCfylT146vyFI9IvY4cOVTDCP
j9wgHUaQqUjrynEmE5ISderePyeoLPV6pm4dE+o1Nh008SMobyaht6ydCeEL
TGq7XQiaOnQz5XwXE5b9usBwcSRoa8yuOyK9TBiQHShsPEtQ6t6uxYeGKH8H
PsveYU7Qp1dSRq2jTMgo+htupUOQlXs599AEE256aB411aTiOXYrnPGbCc+y
FyfJrKPmm8XtI2nTVLwHD+44tYIg9CTmnb9gNaQfyU10/MdDTT5bZrauqAYh
g7DaN1946NHZ/rjPK6vhkXyx0KtkHjKAV+aK8tVgb/+88spHHoqZ+ftZVKUa
etrOTtOf85DrzZITverVYH6qjT3pzEMiLodznhlWQxD7su1VaR6imc23F9xZ
Dbsvm250E+OhKxuyxD1MquEMX5u3BT8PNQxJnz+/rxqe7nb4UsDmog92XVIG
x6ohVKrGXpzGRfpWl6+xHauB2T+hVG3FRZd2PtEweVYN+j4RRjl3OKjaKE5K
4AUVzw2BbjFnDtI0LJ0uDaHe3+p9S/8EB43v+FNh+LoaFgTrJqhso9ZXHYfz
Oz5Vw2HlgheKo2zkv37He62CajiQrfG69gy1nktwJZWHqkH+Dzm7W3YYCYoL
/+keroYfeG/AN4Fh5Cim3PWeWw2sMIvs1SMstEHEKllurBqmgiIsLpaxUPp8
+t4Vs9XATb6speXMQngy8r7k0hpYWHb9W37aEFKY+HLh+7IauNk/p98fPoR8
xmoPP5WpAbWRbRks7yFkMiKsICZfA05av8buHx5CVSy3AuH1NVA/2jw6xxtE
GkNPP5Sr1cCHeQEx8xsG0bOBhMCHG2vgq6zUv56CQXS0t8tywdYaEDnWSLQC
B1Fm9z9UqlMDA48hP/bKIFrWtWyNj14N6H2WejhpMYhudmxaZLijBmZfT51X
3DGIWtrMJuZQDZxx/HVzrfIg+h+oILBD
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
PwyPvKA=
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704642807738405*^9, 3.704642872676498*^9}, 
   3.704802616403088*^9, 3.704803245256934*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
JqH/AdES72k=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
gWXrLap0LoH6B3UW/qF26HEwaV7G/h+eH6ag
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/frTHx+3NFN7hcUTKm9vb7Kvstlh+XFBsgOMv+p6
8OP3C4rh/Am3Gv+6lLTA+Zfnt8+emNwH57tF7HauFZgC53v+TppzJ2ImnN/f
qbjvt9s8ON9O0uNh0vmFcP6kAz+/nctbAud33DX7KPVwGZx/kf1MjE3HSjh/
z/I3a2yZ1sD5LbPaBY7lr4Pz/X33fhLs3ADn63XUnN9weCOcv+3k85RdEpvh
/LUmAi3t6Vvg/LKouqlH5m+F81+0zYjP+bQNztfK+yHdorcDzheLYZnI1roT
zi8sPtvvc3UXnD/P9U4DE/8eOL9EbrqWcvJeOF9q0/Rjmxfsg/P180PfsN/Y
D+eXz4xPfTzlAJy/P2L72Sqjg3B+jHTqJPe7CP6Goo/S31oOwfm5yxfMi1E8
DOfX3V9a++MUgv/jy9lQn8wjcL7m/CufGlmOwvnrfQzfvFmD4M+7vuEev9cx
OP9haptuxhcEv/diXWnF5ONw/oeLoU1Z+ifg/BVXm15PvIHgn9x2ybew7CQi
fcyu4GlTPAXnZ4v87a85ieAzZC/h0U47Dee/OrLwKZ/AGTjf9s/B7avWIfju
Jw74aXidhfOXTRd1uv0Jwc916dVzm3AOzl8i8FZQ+QWCf+uOz9f/9ufhfAAs
pK7c
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, AxesOrigin -> {0, 0.0085},
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.704642807738405*^9, 3.704642872676498*^9}, 
   3.704802616403088*^9, 3.704803245528981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "2.5"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "3800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704642901525741*^9, 3.7046429392703238`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
DI1BLqqtbx6fy2ND6Z8CyQPfuOj/VpGD9w==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
fwRoS8I=
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7046429057102623`*^9, 3.70464294069068*^9}, 
   3.704802617708641*^9, 3.7048032485972767`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
QeKV/shJFS4uYRblTS5kwUzVoJybFhet/n6Xj9RkQdcx9RRvcy4K5kQtPk9h
gdnT1IJfllz0THHJ62ey4K4p/zWf/VxkGWb0q7FYcEuzp9v3IBd/7K9BWhEL
8hYGLwo6zkW1IyXyrx+wwLfmXgjlAhdTbnk9eiVKwLmKirIXF7n44c7qtpFl
BLiUpL5W8+di+vR3834pAqwyz+r3B3Oxl2UY66xIgGr4kr+a4eTzo/9dmWdA
gHzohEpUBBf95ikaS5kQIB347ug7BhcfpTd+kdhLwEKP6tvRsVws8UlKyT1M
wIeDdpeGUrjo/cNcUuM8Af37kLcznYv9ClbeBj4EPDbd/Cohg4vTR9WOqAUQ
0KA3vRNyuaitdrQhO4yA61qD7sn5pD8pOnVydALKtnayRwq4uJ/jB7QoAtjy
WTNEKRdzFwt9eZlIQOK6COVvPC4GhX3JeUQQwFjt5WBYwcWXX4wmstIJ8F+8
u+77VS6+Xvak6nEuAeeFlb8YXSfz1RRRqVlAwKl5K6QzbnJRunNduFcxATZj
Q0Gm9VyUfZI8E1hOgPnoo9KsBvL5t+GmxlUEGAzf6Btr4qKyhHPT16sE7Hif
s8jiLhczeNd3eVwnQP0VQzf3HhebO6fy2m4SsOn5hbMT97n4dP2lezO1BKzt
dkjf28HFhav8mAvrCVjxYM+D/Idc/JXp8uzHHQJE76pOT3VxMfCyDL2qkQD+
OyuVDjzhYvjX5giLZgKmbvDZFz7j4nvRquY7LQT8qBpmzD7n4rv1pzeKthLw
ifv4lvVLLor5+CT/+3/5m4Laz8X9ZPw/nRFRbyOgJztfiu8NF8XTmjyF7xPQ
mRZtZvuO1MOD8frrJLck+QZy35P2frwfxnYCamOOl8wfIv1TfTucS3JVhMnL
Q5+4uHo29+YrkovDti4s/8zF2AUqtj9Izg6W0hH8ysXzteX1/8YJX343+1Eu
uR/3+f3v/RjPL6mVP7iYLdcy9c8+ze3ZfeHfXCw0etjzb/5gl/rJo+Nc7FK5
F/tvfReOFW6+OsFFD1UbtX/rdzsUd3jhNBfV/ZIa//l3wiog0nGW5EeCB//5
f8jC6WbNHKnnXtepf/HZZ2Q+LDqfh8s3clr+xc8INVc7C/AQxXlt/+K7U0fG
9KYQD2+nn5D5ScZfQ1MoYIkID68v8+/7l58S70md0kU89L+/N/A2mT/Zyi8z
RmI8fHd6oSWS+WWNvqkfEOfhssN/LifWkPlTfRIasoyHZ936DK5XExDm3mog
JclDysWmttIKAiZLbgrUrOLhmlftxl48AoY2ZUd8leFhesbrlZ6kHh1OJZpF
yvIwqb5/oJjU65P8cFH5jTxs3Fuefi2TrJf15+IcFHlYyCwc3c0iIG2NTsqD
bTysP//2oiGFAPEjKkdOb+eheBtjeEUIAfQUWWl+bR72Jh9oqfUnwGeFcLaO
Hg93zg5sCD9HwN4lTwuLjXl4Pn/vDtmDZP4t753ZY8ZDxYjosCyyvnWZt5Te
WfAw+MWtg+PGBCiK5JSvsuLh8UtX7ZV1CJjH73Gd7sBDpmHn5VZpst52nQjY
eJyHM2Jby8VWEPDtso3unRM8rOwZWrVtMQEvZ3TujJ/iYc6uqgTRWRZcHRe+
d9KLhyu1a3au7WOB6+ecnt3hPJzdLm+0JZ4FrxWTU95E8FDdRG2TC50FB09H
HAmK4uGZoyl1Vy6xwGDQ43VVHBnPylJTtzMskH6tO7Q+nYe80x03+ZAFCdJq
RbczeJgad1fSdTsLROw3uB3O5qFMxaXq61tYMP58wbc4Dg995sV9X7qCBe6S
M+XKRTw0eXL+qgzZrwdsRr3aSngoyn//77K5ZDiUOKDhwuOhZNTCE2O/kuFR
97OxuXIebliS6N70KRn+B6826Sk=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVmnk4VG8Ux4tkSZJKJYmiVIiQCOeEskuIypoiP1tIsrVwjWWMnbn2fawz
hBYVpYWkbFkqVCoV7SFJ4nf7a57Pc+99z/Y95877PlfK+ZSFC9eCBQu2cS9Y
8O/399pGZzurleBaVxf7RoMAPY+bjQtKxkFB78L59xS3sbhWPWNxYeWxYMNx
isfTtjyqnl6CRK/Xd549BCzVLWm6xxLBmPX+flIUS96sz9pxYDXeXXagQ49i
FeVHAVnT63B+4gSXD8XFfV/LuA9KIv+rEsEiiquWBzKvszbi+NP2jy8orjdd
GHFqRhprTFUyJTUJuBtD95U5sAV39U+v9qD4cfMKx8GirajocNapkeL+hTkm
SdPbsVE9yGe1FgHDWps19E0VMH3hhG4QxT8bnqbMmSui9Hvb/jcUz087hV1m
7cSvn1Sl27UJWETKBC7rUkbOrU19pkAAn+pHb/cZFfSz2arYT7GI72k7yQNq
aLos6dFfJGD1st2WIUG7UTnjw1z2XgLEObOG/UXqKBxicFdXh4DNYzQ1xvQe
PCbzYqBUl4DtUUYKHzZq4TXND5IuegQoyiyT0THVxmcxnU+37iMgR9GEf9Yc
MX+7SMDD/QSUevZN1bB08L7AO38nIwIqbqr5vdLQxR3SDXqHjQlgC2R+EezS
xY6DY+o2JgRcKnMYOTmjh5kh0f+5mxFwY+RD9/oD+rhUrZQ1YkFAg7KRqfGI
PjqcWeS+0oqA2+Hs1sAgAwxIT5o2OkTAfUnf2z1FhlipdkvnsQ0BHXYz7Jhp
Y2z68GKLhD0BXZV2stfiTNBmSc5AuAMBPTO3ikY2mqLA8oFvXxwJeJZOZIKp
GY4L5y156kyAr/vi+zPm5lhgH0ebcCMgpCSh5hLLAvfZFQsaBhAwfeZqatyU
BX6te5ilHEiA/74XZ931LTF360iOdDAB3iPbtKXHLHGP48vqtecJcNrY0kbK
HcLCILk500gC9ufOvj1fZ4OdhX/HOkiqPsz/RE3v2KGo2Jn+ulsEJLgk/t4q
Yo83SlpCDe8QIKh6bWjxcXs0GLpz4u09Anh6FxU1LXJAo5nTtzY9pPxZnr9D
xcARPdTX8Pb1EPBtv0dx3Acn5P7Yt+3rGAF9dwsa/b2P43GFnWsq1kSAnZ+8
vmrqcZS8fyUpdF0EjEhd7/p5/Tjqp+QnHJSIgPGLXW8DeE5gSpQYN7d0BAjB
PH9Q9gk0PEWpd0cEGNy0sz7X5oKqfjPKP/dHwM261d9om91wu7m4H/1sBBQU
x0mSLz2RZDgaWb+KgKq20lWZ3F5IHlvsUP4mAm58vyOQI+uFr2ZGm+beRcAT
zanJQj8vHOCFsEufI2BRn8PDqsXeuE3MzUhxJgJceRT9WhRO4bnns1uLV9FA
VHnsdfBtH9y12OJxkBkNxPcH2M12++D2jjZdCQsabDzC/fTciA+28qcnNh+i
gcKF9Y8v8vsiazTrlrg9DfQfHbwaaemLXolcc188aBB4/AY9+YMv+oQp3pKk
02AwJVa5YtlplJ3h3fqtlQbDwgFqjZtO49I6jR7zdhq8j3Pa06V2GgvNlnOu
dtPge5Sq7pTjaby64JpwwgANFoW+stC5dBpLRvTDT3+mgdwJZb8Bc3+8EDua
ILI8EkJVBi8JJJ/BqEXCB0ftIyGspvny+pIzqLfGe27YORIiFS7VK944g+KZ
cvMvT0ZCoiytyfrNGYw03LLpk28kFIvv6CrcGYBjnvMi+yIj4fEi4ptGTwA6
akxe47sUCev7til4rAxEbbtb9ev4omBxwHLtLVsCUX5ioMZ3aRR8F502fase
iCMxvES7SBTcPdzsZesYiCtdQ/qY66PAbciRY1wRiE0S0Yd8laPg8ttUOTkM
QnU7/kdmTlFgPD637YtHMF67R6z+dSsKVFLeaZSfD8b/ooeTxJujQELlsZFL
UjBm9e/QMXxE2TuT4f7iajAKfhvxr38aBczfyhXtC0PwUatx4LfvUfBmwX9b
q8gQrHk5O9wmHQ1By3q2nLoXiqObrGOTk6PBWWz1nYanoajbEyp8MDMajGRs
jwp8DsWavJz5tYXRILbnLYO18hyav//u8qgmGhpcJ34MupzDB/bgVNUdDXON
KxoM+M7jg3caA7QVMRDhaWW+0fQC/phwKOPNjwHPs+ljp45dwIbSPanq5TFg
FT4U3njmAh4/H3omsDYGZNJPXDmcewFd9970Xd8cAy33/MUSvl3AU9x/2hZ/
otaLMxr/a3ARzWvalD3U6fBgxL3B/dNFdFtDS9/4mg5DUd83Of+8iFL+ajZf
PtFhfFtA7JH5ixhxXTn0wRQdxH3DjhqsCMPgrG22FYKx4PeXnJbZE4bV41sl
5dVjQUK0WeU1PQzbnj7P10yLhQD9DRybbeFobJHor3qUAYyPxSsPqIRjC/v3
3fUnGVAQty10v3Y4bjz6p3iNPwMe96gaq1qEY+PnMfr+eAZsdDIZEwkOR47u
IId2jwHtgUEyHQ/Dce8+r/xSpTiQrujJ0fuPwMluvkWy6+NBztEmNtGPwIES
llXM9nhQXjkYOBRC4LGU5af/qseDzvk3lv7xBC6+7OYgYRMPxyx+8BfXEei1
zKNZLzkecmeEArjnCHzTNs1REkyAtcZGZneTI/Dr9ktd/ryJIPS5aQ4aaOh/
cuBiumwSrLKeuGTVQsOAQ01ja5STQLxJ5vh/XTRk/FV+UKyVBNtS6Q+SR2gI
c/KslxZJoK9plfhOMBKbfyZven4uCS4yPkjF2kfit5pQnmd9SfBDTmhf/1wk
rt15dOXeuGTo9bKN9dwbjcuTFrwTEU6F9rHYe31G0bjTL+1hxLpUaHFp+KNt
FY0NKakff25Ohev26z2Xn4zGGfWoul6tVMg1fWVylRGNat1T70M8UuE/+eNC
C55F4++Ib3ZbW1Jh7rN7Uop3DPIus5tLDkiDX25ZD2fPxiCX3mJD/bA0+D7y
aKFrWAxGB6rGfYtNg7dDcn67U2Pwr4TDSbGCNGh9/NXixfUY/NUuLtDRlgbJ
bL+VW3joKBAa1Gm+jgmxskUmiUJ0HLvZXbBChgkRxT0Rv1fTcXk99t1TYMLZ
bJWfj7bR0VBBt/bjXibYMab6fMzpKM1nHrf/JBO2eAaTN7Lo6D+dX/ecw4S7
tHj3yWI6vpoUThW9St2fV6ilUEXHVu1htT23mJD8pO1tQRMd/SwfGGh0MGF2
9zrFmHd0HAzSU+D5wgSmxQ7ue1/paEZ/df/MJBOUPHX7Z3/R8cPtsB2P/jDB
Nc8j1EcgFs//XrNmkwAJXTwNrTY7YnEFV0PMORkS3Dd0ZSXtjsVTz1WXLZEj
gUd9xPvR3lhUml1wKXgnCRqegqvAKhZPjp+dndMmgfXE7tjmoFgcnSgXSbEm
AT/7qDiFx+IHUqhB1o6EAR4ab2ZsLG6Z+LY89xgJwuocztLcWOR1aS/e7ElC
cN7f35N3Y/Ghrf+X0gskrLy+vF3hcSxGJ876K0eQUP1EJt+tLxZndXTSsqNJ
GOEx2z/0IRZRNqp2cRIJ5zc4rxX9EYv1us5avGkkrFUP+HxgJhZ/uzwPHUkn
wcwzN/meIAO3/NhhpJJPwiit1uXvKgZWXezxLykigchr2a22gYGuEhfiJktI
qH/y9WWFEgMrzk71buKQYPmZq3ZEg4Geb75xFl0i4SvPapqEHgOHvww+bKol
YZM6bE+2ZuDFpQOqbddIuGVhOffIkYFyZfdw9Q0SDnue7Ob5j4F677YtggYS
JmghxeDHQDOzo857b5EQn5dwNiiEgWdSvUCiiQTZ60VGdREMZF/QDuu7Q8K9
J9fWf4ljIHw6uezkPRIcPj/6vplkYHUqp+fJfRKmeYbvOeUz0HmN/I01LSQk
b5hkZpYzsHGlcc3uByTIq/O599Yy0MAyp3xnKwmtFuJaQg0MbCjsTVv8kARn
T0Vhg2YqPrcS98sUz9L03oZ1UP58uyKh2UYCmXf46s2nDDx07lxFDsU7r3vG
/Bym7rfbw/ec4sdPLtrt+MhAaSt5la8UuxboTipNMrBD0PfXv+sLfBYzVOYY
iEp37qVTnKn9cJMaXxy+XFKWs41ilaWMm+oicdjnxWEkUPY7Bs0sNcXjcEO6
YtYDyl+3iuWftDfHoVbf3v4nVDxcQb3hexXj0KMrxLSGijdbnxTT04jD7nMf
RI43k7BL9Gjtfr04XBfqtGeUylfXiLiRoVkczssIvMK7lL7rXr02PhyH8tpq
a72ofC8KLwwyc47DlgTk86LqkWvusvygZxyeMLVtR6peuzfIllsGxKHrnlOM
0eskeDZwnh2mx6F2emHq5cskLI718bFNjcO7l2uUnteQkH9Emc8hNw6Tr670
fVJFQu9Uvdrx2jhEqe25umUkeDeHdLo0xOG1I3enbhaTwJeqfdKtJQ5XVK97
wF9AgqbSfabXQBxqDr5q2pxBQv98pILPSBzKqFe6TaWS4NNh2OL3NQ73x76K
yE4kodij8+dZrnhc8uyhklcUCYIlA1bh2+JxdOfGFNnTJJT453yOUInHR/NJ
f+u8qP7UdYqI0o7Hb69IwzVuJPgPv6tjWMSjjYn1iCfVr0NiP0TI4HjEC4d2
m+uSEDBWV5EREY/Ln0RXszWp/q0P0MmOj8fQm8V/RlRJ0Ds061tQGI+B5YXs
j1tIYCfwdle2xeOHjxeErKn5st+hza2qNx6766NvZnORMCwXt6DmZTw2Nh/K
vTvDhJVtIopXx+PxXNy2Ts5HJoQukkhoEktAFyH+UqGHTDANUjHtc09As7a4
NScuMmHgyE93Of8EHHN1oQefpeaZxtVo4lwCNkea8Id4M+H8H7X7SokJ+CQ4
o32PHROqzu3ZE38lAT/HinQ/2MUEvr0FqZsWJCKv2QJzl9E0cN9XFj5klIj8
F+QN4jAN5M2uOpgNJ6KlvGpT0/MUGF/z9YDDO4qjmn/7tqdA/VuZvd4fE3Go
2oeQvpMCekFpm+InE1GUZ8eT+LIUsCv2H23nS8KTKifXhZ1NAfrMTj9TpSTc
8upZ+nrRFBgtqaaZhCfh/U+q9EmbZKjy/RBgF5WEL+9Jyx0ySQZ/zQ1unowk
nCMz79/CZJjvjjdiMJPwy6FtZzhbk0H0r9eyxxVJuMtFfHD2TxLss5TLMO5J
wsnZvj8XCpOgcL6MbSSdjEOc7Y/u/UqE3RkWn3S2JmOVk9PJii+J0Llzduse
hWR8uE3NN/ttIsy6HCjdvjsZi153fC3sTATrxz8LBE2SUa7jzEGNskQQyNAh
O04n44P+nk6mbSL47hwKs7iXjPPdnRVrmQnA95jWZNSajJ+s0lXaIxIg12XH
vE57MtanLGSTpxOgLT08VPlpMn4LN1H0PZgA0vOyZ1d+SkaD4Ww+VaEEePbo
jGe/SApetAxUH4+NB3RZZnPUOQVFzlj13SLjoIu3/tmsawpudEmz3EqPA8cK
p6N5HinYcL+mmhUaB+e/1diP+KegfOmGyz3H4qAhyOqEd1QKar5kt3HJx4F6
fIZvODsFH19/cierhQE7r21iVEyl4Odtzye3LmbA3SOPl5r+ScG0zR0q5TOx
cHDWP+HbfArubOtsUfsWCz57W5JV+FORv/hHXPizWKh+5JZxa10qrjzadeJx
ZSzIDXNKnmAq9ni/27HhUCzI8O++M0NPxYEwQk65lg4qi3ezFiamYkjf66uF
pXTQ494dw5eWiq4LB8ykcujg/FftoGheKq5Jbd1nHE2H/B9qr5XqUrE+/lLZ
AUc6iA2oLfxvMBXTf2U48wjTQahSbe/T7WkYuZfpTYTEwPoyNZmXiml4SzzH
otQvBuRYavzvVNPQyGSpx9P/YsA4T617HNKQdbD6ne3hGIhOUTsmZJWGCUM6
TROqMcAdqha2LzQN0+v5nE0nomHaRO1O3eM0tH4OMlIB0bDActfoie40FMx7
Wid9Khr4j6guE+1Pw8nhld2KbtT/fRdl+8BXaehReu6C89Fo2HNux2/N8TSs
702U3QbRcJ6zRallNRPbl/94oi0QDYuE1hQ8c2aizt4/vRtLokBw5erWmJNM
rBq1SZXIj4JVYqLfNDyZOEzbbSCVGQWbN6/UyjnDxKmG7Y574qNAX1v4+bFo
Jvq2afDfCYgCujff8k8cJubW9IXxGUbB8s7pi3+nmZhXoLJQazwSMnccEFgx
x8Rp2smzyZ8jYWMiK0WWm8T5Xf3RX99Hws6DFiWWS0m88iTV5MZgJFj0VD4q
lyJxOvMPT15zJCQ/dRC1NiIx1rRhPDkzElYO36+syiKRqbV1Sb9BJKz5kdjv
qJ2O0wJi7+mXaeAreYRjr5uO3UafXPdfokHbAakIW4N0PHM5p5+HTYOQqhol
G4t0PKb863hiEQ1eejxhmLmmY/Hp2849yTQofr9CVys+Hc82GJ0X8KOB4hCz
WuwltZ5A0mVBZRoYPMiO7juXgUu8BGmrbkVA5vzxwnPhGaj7/JNQ/40I+Ky2
vUEmKgN7gr53pF+LgMSy69/OJGag8buNY9I1EfA0pt9atCgD9c8qHrQppvbz
JsIyNq0ZyHs9Kn1TbAREdBN3nolk4l/6Zb9DRyOgn9948OLqTNzq6nTnqE0E
yOqI/JQVz8QE1S8azlYR8Lg2XzZIJhOHvh6/etYsAlakNias3Z2JFwLVBRt1
IqDQ+pf9UftM5DpqUV63PQJuD7rPDJZm4uGHq8O85glI9I4JGGVn4izHzoo2
S4DzwrLxyZpMvGgS6JD/m4DFW959XNqQiTOPFmsPTxBg4uc4CF2ZaHk1Wz96
lIBnfFYNRdOZyK4/ZEs8IaAiy2/3pb+ZeCq5uq6nk4AQhaTLDVxZeM4kcnZL
OwESVh3sPsEslJOTJ4ceEOCSZ5DDK5WFhw+rhJ1tJGBcVeu8h2EWShp+PhFW
TsD9VtuZs2ZZiO9Kr68uJSDNNjggwjILx5Tu/KwtJmB32DXvHPssjJtIcpvO
I+D8YyXHTt8sFLglK3WHScCS45tROTMLg3IUGEdoBAz91GuAvCws9utn7ScI
qIo+vtukOAs/5ik/UA8jwKIqX9GlKgvnd3zx2HmOgPTfYlLk3SwMaPAxOnWG
AOnEZVx/PmahagqLs+UkAd+2y9+p+ZaFk4u+8WS6EHDjgdFFt8ksXL9ZvkDk
BAEH5mlzfX+zUK33yIDoMQKCvWdnLglnY8ro5g+etgToCYjdOLkqGzNUFT+I
HCVgWYlakIRYNn7kn828fZiA4hd+v2I3ZWOXnYylvDUBnSZjE667svH3oxkf
24MEZI4urlu/JxtvTNwK2W1OwIkIab9eyMYzvAH54gcImLnp+H2vYTZu1B1x
nTGh8mlzrnraNBtPfgveMGlMQMJEpne1RTYu9G7b8NOIim97/2dxu2yU30fb
uNSQiq9lorLHKRvlwp+pSxtQ8Tkv96C7UPYe3ryro0/Fl2ky9ss7Gw+aFpoz
91Hx8d979yQsG4+d7rVP1yFgH2u4OCYyG593fV30eS8BwnvnjmNsNprLVx/X
p5gVqP6Gk5qNb2ucXFYhAT4rbQpOZGRjgaW5aDQQoHHJ32ldbjYqjDdnclHc
9aH6ZXRpNtqJKu9apk3FT7TnADsb13VtOlygRelpwye7qUvZyO5hHt9DseJN
PnHOlWxcaidp/0KTyof15sHjN7JxYHCBYRTFzeO6mWK3s/HHjm3b1SlOjD92
pPteNhq80OOd2EPA0W0X1kS3ZmMYgzN8mWKZluyn2u3ZWPzW5sZ5ir8fu8H8
2Z2Nd7e0MM0pvvH36SF2fzaW2SwL3EYxLePnyuOD2XjF652jIMXmqit61w5n
I3dd1oEpDQLEuhVTukaysXyjvMEoxe88zSyixrLxzqCO0b/z+0t8nsu1v2bj
g2dq1iMUBxfHdE2OZ6PzUR7PrxTvw9KEyl/ZeG5OLXYBtb7w0H0z59lsdK2Z
rBWjeODsm6VrF+Zg8NnZ15oUs1YsaO/kycEbupdET1LsU72eESmQg+TgygMZ
FGsY7zHWWpaD7Q/6o3so5vlwWGByRQ6m6pvdWUXlpys84GHFmhwUnjn305Fi
jy88/YbrqfX3Gvteonjx4bQ3o1I5uGaClsxH5b/wrvS3qM05uJGtc8iNYi35
y382b8/BxJ1wpZPiZ6QuX8uOHJzseM/Rpurpz9Wz0kUlB8OrrDWuUFzx9Id8
kVYOng8nf9dT9d+vE6aho0Otf0hVaj+ll9dsYf3X+3Nw6cv1LQMUrwnf4bTB
PAd17HO9xCj91X2+5XnLKgftFSydmyk2szELsj+SgxMm6fVndan6yHklZznn
4JzKco9xPQIkydlcjZM5eOqd8bUblJ4bFjIqn3vk4H8ay/bR91Pzqb/i/uoz
ObhT5e1CoPrBKWx0KiUqB68uMZj5S/XTn09nuZUZOZiVfdtsnuo3pjWv8JPE
HJQcLCF5zQho3755q3BmDnZnXRmUo/pVo/+4LYOdgwI5luOtVgT048TJ7TU5
+Pvih5oFVL/7Vob7t13JwaAOJwGwIaDsYkEc323Kfvx9q84jBKza/up2RHcO
lr3b+1nTkdLjhaPS56Zy8AhnMBc9CIj9OKYo/icHp5Xkng16ErD5UJDWzfkc
fL4vpC/UmwD7benWv/ly8bVn3dtOXwLaevuiz6zLxfvHum7XB1J62Xrwixfm
YlNz2MfoKAKavqrZ+e7LxbLt6SuKY6h5WifxyN8oF9nV637djyVARPtzWYhV
LpZ4yLJWJ1Lz2CLqRIxbLhrsPVA6l06AdUjjYHFiLrat2D96r5LSS/vWtsHh
XGzuTHOq7yVAKllY/dW7XMzsE5J3f0qAps2v0jcfc/GRuNi1DQME+L2+Txub
zMU807HutFcEvPzpuPcXXx6aVG5/wv5IwDUJZr2IUh6uod0yD10YAW4+XKWG
YXl4Ipg0PqYUAaHao4d/0fJwaG3sOR0V6v0s2CHAoueh2I2HCzarRUB9WYb3
gtQ8DD4S/3lCMwL4XyvuulaShwkLf85WGERAxUHHZunHeXhk5ZJiwikCAta+
/HFhST5Gt7w505tEPT+jIWxrnY851853L/sTAVwJR8RGDufj1v1twm1zEWCy
KVDayzYfT7ovU4/iosGw8ZXdF5zycYuC3WEBARrw5ew4VuSejzPNgcdV1tLA
BqRrP53Px8Fy33Dx3TSYIpZahZbm431Z8srJQBrgGjkHnop8VGPV29JDaUBn
G7nFs/Oxxtq19tJFGkj0RYXm1+QjOaeQwBdDg32buVj3b1L2Su2fv8ugQWrr
1E/Brnxc9jYrwL6BBspLh8mc6XxcPftod/CiSHgffa1V7E8+lvXezhbkj4T0
RQm/yb/5GHd3RULR0kiY/aNlm8xVgL+WKuq8Eo2E5o9ZElGCBSgqUjcUvzUS
bFptWD6SBbiidUNv/4FICCE6a3UNCnCmfCDUJD8SFOZL3jYZFaC58KV74axI
GA4+v1LbtADd771qv1URCXp+8gG7LQrwPdeAtcGVSFh6LFZd3q4AA89FuRW2
RUKetn6TqE8BztIv7gqdioR7v2+1j5EFWKVbErjaMgrGf6+S1MwswDqB/j2X
D0eB5IynX3x2AXLJgYGNQxScnxFbrVxQgKFnh10v/RcFGn8CnEIrCnBVa9u7
6otRcGlWYUKosQAjVled/lIdBdnzuWtU3hQg7x/u+NoV0fBo/qd75EgBqu5a
tk5BLBpm5k0an70vQPtVmc41ktFgs+DPsXOfCnBq+RKrTvloEFloU9kyWYAl
9GRZd4NoiOFapn2EtxDPM0bXbrkQDQE8F46flyvEnXyuBhLUfmCkduEHrh2F
2DH07KPZn2iwdIpwj1IqRK2705fo3DHU+y3GN3FXIforq0xtWhkDn3xSLxRi
IS5c/pjxitpfOA2VZ7VYFeJmPrkEBrVfMa7r7RE6V4j9KrnGB6n9zA0nG5sU
6onwg8lOQmJ0kBUaGFgdXoj6Qo46zzfRYfF/r15LRhVi+hDxMF2NDk0SH7/t
TCrE37JvAu5Q+6Nd9PklNqxCPO4sr9RB7bckj23Ty2svRGGaYG7YiVhYkiI3
Nt1ZiCez+AOdTsXC1H2FeIsnhXi3YruAWXAstMsqP+N5WojvV4mxDyXGQvD3
PZ6ew4U49fu75trGWOi5YJqqPlGILTtC7CPWMiAy12ekZ00RPjnmuDL8JQN8
u/xi5NcVYfti+/Jjnxhgx3VGIWp9ER7fUFJqMc0AZdegQI2NRXhKeljlP5E4
GJYPFyzYXoR/ud6+dNePA43GFBVv7SIsfCMc8+RyHHwZvBrBd6IIr7dt+NqQ
Q+2Hf/qaW7sWIXFqqraIHQ+pQvLixW5FaJoycz7nZjxo7i2qA68inBa66tr2
PB7oJQlvAgKKUOt53B+B1Qmw2dcN30UX4WBBvcvOtARwWCw2e4dThIdyxSYU
zBOhU/Hc6ZBfRXh59G6rUlASOP867vPndxGm1znw/CCSYKrRyCtktghDNoby
3oxPAnHjNSdDFhZjmOVm/lPFSeDuUnc0ZEkx5r39GWvVlQSLM8f2hmwoxhGp
/Pq5rcmgyW0tHKJfjFM5W01ev02Gsj4FTjBZjK+1uoZ8XVOhXjLtUWdGMR6a
5v+v0TcVWj3+jElnF+OV9Su+8JxLhdGFrZs784uR28uKZKSkgqzCsfxNFcX4
VC7o0MmmVCiNTEl53FCMNkX5hYvXpkGJ2nSQxJtiHPA8SRy/lwZXwx3ST48U
4/tdXMb57WnQ0n7/auv7YrTl3Xu442kavD+eNOH3qRi9Em+UzH5Kg82J27we
TBbjB67OG8wVTGCN2jn58LKwSDMx3sWRCZeV751v5mfhwq8vpmhuTLh/fmuO
mCALB/1+bUryZcLIyqnn94VZGKnXrOBKMEF6b4LlWjEWXs5VbplnMaE4487+
u3IsnHvlyUh/z4TJJEum4Q4WGp1SUnv2lQl69HfvupRYqKUtxvg1xYS3wfy0
V7tYaP11vXXPYhI22h28N4ssDIy6WjQuTYKf1VuRCF0WNuz27twoR8JdkzPO
S/azUGiFxNIdyiQ4a2UsFDNm4YtwfqEBJKFA4jWoHWKhgojDVe+jJHwXPZ1w
y4ayn3Ll92knEnAZz6t9R1n4IxYkLVxJGJ6XPW/lyML7zRtZpC8JitM32geP
sdDl0cIDcwEkXPxusv74CRaqXw05rRlKguRrnwbf/1gIT5VeaEWS4POcS/C3
BwuVdxaELYgloak71faiNwsDpnsdMhJIcLxbPxN/moWcjB/ZJukkVN0wMhIN
YGFjhJCPazYJc7VDGTmBLJS7JuZ0KJ+E3KIF6uxzLNxzxD61ppSEr1nJ0coX
WdhlIuYoUUmCdqr0sxvhLGRlXLN0rCIhnnF1iw6NhWWrxzX9a0h4EWFw9mEU
C9k1uqN2l0mQOzfQYk5noVjmLZm110gIPeMp+oxBXR/78KDsOgnirolX3idR
64suT/x3Xu/psJHHO5WFz1InTxo1kdBgfdnqJ5OFlu+V+DffJUHwwP7i0AwW
npKas+q9R4Kt/rMJ7mwWhr9l7zjUTEIFuOvG5rLQLinuYlkLCTNqs8kiBZR/
Iq1KHQ9IMFKMf5NRxELFVeqKLa0kZMpK7pQqYaHKqKlH4kMSPkrWhpWVsbA5
40+vXBsJGmv1undUstD8no1zFsX05f2S1zgs3PBnaskQxc/53Xy0L7FwAb2z
/d/5vCzXzO3mWhaOslaW9lAcOBO7zPQKCzPVlmfSKW4dX+/Ye42q124u9gqK
13yqrrK9wcKVl7+PeFP23d7unXvTwELNi7EHsin/6gd7TN1vs3C5Oc/vLMp/
vl6XnB93WBjMcvnhRcV3+PGvz4H3KX1mbjMRoeIvux+jueABC3+fB8kYKj/T
DesYUQ9ZGOHcFfXkDgkGVziDQo9ZqGa0Pv/rbRJIDmxndrBwvaRpzItGEk5s
O5g93sXC8sdcXS03KT2WOi890EPV58z9L9FUvVrzad94n1F6z1BSSqfqm7qe
dDoxQOU7lZ7zjqr/scyy7qYhSt+3P3sLVlP5T3lUF/SahbJNT0ffl5HQIvxC
uv8tC+9Y3v6YySIhOe5r2s73LEwXElu0tZCE7VHLAz99ZOHT3yJ6vZkk2AXb
aNpPsvBXuN9zTzqV319unOtT1LyQd3T/RSPh5+lgCdHfLHRT4+6zD6P06JWz
oPMvC7c0KmrePkvCbae395G3BJcKmvUOOpPAeDGpmsNfguKDE+Um9lT+ji4u
/b2kBIMbzBOzbKh+tdwaUytcgqdOZT3sNabmgf4pU2mxEtyUYvm0cSfVD/cu
3rooXoI3Po+KyFLz4CYm73ghUYJ9qyRm/GRIsNK4spy5qQSluo7uZK8mgSb/
p49XvgQHvj20uTrDhNEVUQ6foARlO/8mnbtJzbvE9E59nRL8aGbSK1HHhItL
K7BYrwQ3Mk/1lVQwYS1v+0Z7wxJc2XHhimcGE4xmRD50WJTg25/G3oNnmMAZ
zj1V61KCSbLRuwq3MeGN3n+83G4leH3OaL+IFBNEy5XzLN1L8E6OcbDPamp9
39aOSe8SzFY5/GGamwkWXOPyaoElWDImO603lAbTm/Z9vkkvQdeLNf9tpKeB
zslPbs3VJXhgV7Vq4YtUePZFzfnZ7xKsdFCY4D6bAibz8tttZ0sw7J5ZyWv3
FLgjLD35Yq4ER/2rlt5zSIEKZeHIt9ylKHH6lFDy/hQIDRot/7q0FPfMem10
E00BSZ6MH4s2lqJxZobftmvJ8J/4zEUlo1KsqhDo8ZlLgpfy3w0vm5Tii5A5
9Z0TSWAB70XUDpSiJtsz7O+HJNB0flKsaVWKBrXsLbXdSSBUVtGq71CKqovC
HjNZSVCrbCvs4FeK2xQ5W5wPJMGMUUMePbMU7R1S4wIrE+HTsBL9TXYpnvJ5
dXBfYSIMBZT6a+SV4gmzanfxjES4VZhs+LGoFK/vXFYyFpkI4TNuE4acUvxa
fJtYcDwRllSs0udvKkUVkXvhkusTQZz/1Neod6XYW2XRpL4zAZbmjTx79aEU
S5MbA1w3JsCcytF7ah9LcZWHj2GpSAIMO+1L//C1FN/MPBZymYgHVv06Hf3p
UpQKnGZ2XokHBbfWtMVLyrBB75mRpXY8wAMpLZpiGdZ2EXnZ9nHgI3Dv8DLl
MlwgEV8ldCAO8k1P+GeoluHyNItHaRgHXL0llRyNMmRyGTa/2RQHLcPbxfr1
ytCn8kePP/V/ymxG9dfmI2X4NtmF2/k8A+zljWpaw8oQPtUzC2tjId7n02OL
iDJkGTrphpfEwq06xuhQZBk+l53KOp1JvcQ0Ojf8iC3DhJKxEXp4LIzst4pf
yyzDrO6O99GWseDp5ODhXlGGi7bKGFdO0yEkxU9GsKcMv+ziW9hjRoeVtx6f
pPeVoUfmoNaIHh2qRjdX8D0rw/rXV12599BhWGtQgedFGQpvs5Dy2EKH/aO6
u+fel+F3CbOmFwvoIKy1yvj7TBnmNhbIaF6NgeL313x6N5ZjlsU4W39bDGgt
F6mzkClHoY5+hc9SMdC/x/Nn15ZyHOYbncpaGwP8SZLB7XLlqBfpLriePwa8
98QQLbvKsbUwSq1oNBp2Jx5l1huVY6xjm1Z1eTQ8Vv97M9uvHGXarQwMlaPh
zWj/hu/+5eiRP9XHlouGafISoXu2HBm3Txuu2RwNm6aOG38MKccjwmerFq+N
huDatgE1WjmK9k8twfko2Lo9/fcTshwPc/wUxNqjIFJcWY2/sRwjG7tz1nhT
+5FHgll2t8tx8cFBs2NuUVAb/H6u+k45fu4z9bzkHAUvnmW0WLeUY1T/zTvH
bKJAJW2BdXFnORLTx6uX7Y2Ct0s7/OEN5a9eZnzCqijAebfaM7wV6BFzbcfA
3Uhg2nrr/+GvwOS1vad8GyPh87XTQxcFK7Azze+xUH0kkD7nFzOWV2D3JF+V
LScSvr5OOVq4rgI/46EBzfRIyLp/i6tzRwUqjBeYrDgVCVMxKy1lD1dgvqxU
5QPJSKhc2TQxUFaBjZHbetSTaXD+p16FamUF6q/bHmseTwPz/odOiZwKPMuj
FOdOp8Ek2dO+r7YCXbsEbMrCaaC57kPppZsVaBJSd9ToNA06pITsIjsq0Nf3
5tJNh2gwrmB3X2myAu+sa16+cB0N1A2nU6OhEmXUyOxTVRHgv3yX39O9lWg7
8v7j3soIqHp++sBmvUqcuGZmJ1oWAdLu3/jvG1Siyi7dwuaCCBCKfX9+/mAl
NmqppGmlRcCbx71uAScqcTBhqUZyaATQzWs0T8RUIp9EnmCHSQTcX/NtbV1s
Jd42WD7w1jAC5oflfi2Mr8SHBSee/NlP2fctq8lLrsTnUvamO/dGgENy3ubB
rEr05Y1svK4aAcq9ccIWVZXY6j1Eqm6IgCEb9xHoqUSFL/61XJMEWLf3jDf1
VaLaSV9T+R8EdOtoLdR5Vok8/kLqtl8JaJEXltB7UYmEiZfcnVECqrmv2hh8
qETllt+Xr74gILx64SPzP5X4UtK/xaKVgFlpj+fdfyvx/F7HwWvNBJzN7P1g
sYCNu1wDeaTuEeBJK110iIeNNcd29cw3UvZtTbWPLGPjmrqxye91BGzlzag5
tomNkl3Ko1X5BBSHcjW9kWHjd2PeULtcAiTGPTqOy7JR/f2A1LJsAkReaH9y
kWfjdV/XUYKk7NeOSLursXFHnZopJ56ALgfFdD9jNi6p3yKy7DwBRr0ZJROm
bBSUqlwhGkpAsyH3FX9zNh4KeLRvUzABN1T6uwMOsfGu8VyEeQABRQKhS0Ic
2Xjq7EHvaW8CAq4+OE+cpuzNSl2LO0aA16VLVc/PsHHq6XZSzImAExUZL3cE
spGZx3nCcSDAItdDeyiUjbmzE8kfbAlQiFw2pxLJxkUVwdXl1gTIXJyWj41m
Iz3F/q37IQLEg1/bv6azUeC6wdBOKwIEvOsa4xLYeOk594GnBwl4d8jm3Pt0
NrY6TkedNiVg6AByNLPYyN2aqOppQsATw60vknPYKLVklMfTmIAmrT+aUMjG
BydI9TBDAq6pjXimFbPxtHt9DdOAgCql9uxPJWxsZ6wIqNMnIFsmb5asZOPH
Hd383PsJSNkQLfeVw0bXyspPqvsIoK/1tdO7xMbGmMvaPnoEBC7Vbfh+mY1/
1a2P/tEh4BSv3Of919gYoGOqbEKx68JV4jnX2VjtKZZbvJcAq5/vQwxvsfFC
39H9nkiA8bfOyrwmNt5Pi04aBAJ0xuoHf95lY2n1YroFxepvC5aYNLMxYfi9
arc2AYov6HsKH7CRceJrpg3FW56e9ph+yEau5vRb77QofXTbZZk9pvyTWFUS
QvGqR/seFXew0T5B2XotxYLNCn9muqh8olPPLU0CuG+v3n6wh43X3pRIef47
369fYFvaR+nR9qqeFMU/asfof5+y8WbECLzcQ8Ao+8kNywE29swrif77Xv1V
yc2P5UNslBE2aztFcX9+sdiCV2x0Opfp8O979/bMOCPr12yc/rSlT5Li+6kB
wey3bDz+Kn/Hv+/lb8Y7VnC9Z+Pz1n2nfmgQUBttMHB4lI2F136kvqO4PFxJ
oPojVQ+VDQWvKc4PFdPg+cLG/xS+pPy7TgZwu9t+o+x/2+T17/l4n88ZNT8o
fUhryP1bn+be95B3ko0a1450/bMfeuLWb/spKr4PRw7/8++0Q+nWy9NsNHQv
v/vPf/fDiUcE/rDxBMdk6b/4jlkExTj9ZeMxm7eq/+I/bOJ8/eo8G4U/cNT/
5efAfuMxQS4OVtilrPqXv/2osvb4Ig7qftnc8i+/mhrrDa8v5uCV2xz9f/lX
VlkctIyfgyL60sx/9anw+61RuYSDQ6e4aOMUS9Z8nt0vxMExyYOSp6n6Mr+9
uvVGmIPk2wGnvxQLKvRcPL+Cg59+PdNOovQR7tmiIybKweLWvzUKlJ5+V1xf
dHUNBx97Xqjpo/j9lvzoL+s5WBCjq4iUHu1cU4xiJDkYLjaYxa1LQE9xpKDM
Jg5eP2nu2UVxk5RXop0sB43+xAhFUnrPXKeR/mgnB2vHZBc6Uf0jfFT+6ElV
DvbxiO/1MiIgKl1SnHs3B4WCQi8SVL/5r+LN19DiYPZ+67ttVH+aLestLdfn
oE7hy7y7FlT9TR/8t8+Ig6tFK+REqf7ew7ix/bUJB+2DlTT8qP6X5S+oXmPB
wcygRUm6hwlYyO19LcqOg5oFu9QNqXkSuPdY0CZHDtrt+t7/0pGArxes9tw+
xsFjjirHQ6l5NDCrcXvKlYOfOeUzHScIuDzF+8DFl4NQoc/V5UGA28eCft1I
Dq7xcencEULAS9m09FfRHGStXbdozzkCDp2MPhoSy8GmIy9HTC5Q/Tji/bI2
kYO9S6usIwhqPr3c814qi4MMuU0NwCAgWXxHWWMOB93PRQmdp+Ytv+1G9yP5
HGwU3+Z2N5GAqad8XxNZHFzwSv21XRo1/0Vnq+XKODjZVvGslprXb6y++bZW
cDD6uk+UUCalr5Q3yic4HJTd/+r5KWq+d3b3/Zyvpu5Pd2nop+b//xS9AS8=

          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/VNyb1JMiIh9qNgnvqkLO+yX51z9tnGpkwOMX72s
f+OGpUFw/tVDC/eW5CXD+QuX9CpMv5cD59+e3G28ir8Yzpe9qqWXLVIB51fy
X1bPP1wD5x9/krUn63UDnK+y6vJcl8xmOJ/vzYF/9nta4fwrudHdOY4dcL56
TtX0XbO74Pwzlxpi9F/1wPm+lSa+V7P64Xxdv21xfg8mwPmL/q9Y46UyCc53
SOUPj0qaDOercloc/NU1Bc7/4WN+cPOZqXC+4PkfDX9/TIPzJT5OuBZvNwPO
9zg+p+Nq7Uw4f//trF+3l89C+HcCP9PvV7Ph/AtNZSdXScyF85dqBr7NdZgH
52cUMC33bJwP5+/4ZSUQHbYAzjfmfTB97g8E//DPfWdfTl8I55ex1ifX6SyC
8xUStVzmn0Xw397e1sKRshjOP29QW1z9HcFfcVVvbdX0JXD+kpkH3Q7pLIXz
p6+11552DsFf+2Be/qbUZXD+jbfmSTd+Ivi/vPbM75q1HM63P65o22qwApH+
Jhep8lxG8M9Y/t09p2glIr7+Z2wqZV8F568WOfD51goE39LzxxSgKJx/Jzzr
if1lBL9s2/G65uI1iPAzYavk51wL5zMy521vj0Hwz1+8+vX/egQfAB4hgx0=

          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, 
       AxesOrigin -> {0, 0.009000000000000001}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7046429057102623`*^9, 3.70464294069068*^9}, 
   3.704802617708641*^9, 3.704803248885358*^9}]
}, Open  ]],

Cell[BoxData["-"], "Input",
 CellChangeTimes->{3.704642942645496*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "\[Rule]", "20000"}], ",", 
     RowBox[{
      SubscriptBox["k", "c"], "\[Rule]", 
      RowBox[{"8.99", " ", 
       SuperscriptBox["10", "9"]}]}], ",", 
     RowBox[{"R2a", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2c", "\[Rule]", ".59"}], ",", 
     RowBox[{"R2b", "\[Rule]", ".65"}], ",", 
     RowBox[{"R1", "\[Rule]", ".5"}], ",", 
     RowBox[{"l", "\[Rule]", "1.5"}], ",", 
     RowBox[{"d", "\[Rule]", "1"}], ",", 
     RowBox[{"J", "\[Rule]", "1000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tk", "=", "1300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q1"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"ET", ",", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"ET", ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "Q2"}], "//.",
     "params"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "1."}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0."}]}], 
      "}"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_theta_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<images/msm_flow_d=20.png\>\"", ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MSM\>\"", ",", "\"\<Fixed\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qc", "[", "t", "]"}], "//.", "params"}], "/.", "sol"}], 
        "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Qa", "[", "t", "]"}], "//.", "params"}], "//.", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tk"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t,s\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qa\>\"", ",", "\"\<Qc\>\"", ",", "\"\<Fixed\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<t,s\>\"", ",", "\"\<Q\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.704642972267405*^9, 3.704642999459049*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
XA==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"MSM\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"\[Theta]\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7046429743882847`*^9, 3.7046430007446413`*^9}, 
   3.704802619055181*^9, 3.704803249991057*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Hw75OKE=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
5kaKsE4FWFJbzUw3euBeydzrR9rLoaVjICHgjAf+MjrfZtJfBtGi9amfLnqg
/fU9E0Z1ZXD16p3sk0Ye+I164V5aShnMjJtXClp4IOin5K25VQbSwt+7UwM8
cPOeZtP4sVIIMlxcSZR74PHXW0ooF0rg6JCU239insg7rfx1wrUQmt/JvxqT
9ETzzzavQ04Wgs6rA2qD2z0x7dw0f7p4IRh3n1hVfcATE8vvjJzgFIBPrU2K
7QVPzDZ54XFoQwHcZ5a3vKB74teD4G/5Ig80GPd3PYzwRDfhgRX7SvOgI/hh
ZFmsJ756kmxjFpoHgx4vjMIzPNE+d4P3pFoezJvNjWGjJz424ujkl+SC6kH1
9UU/PdEj+Ves1d2leWGvjk/SX0/0WlFP4g3MAR15vfd0bi/cI6hROG+aA8Zb
LfLNhb3w99hkb//WHPBZHXpcbI8XthFZOqeys+H+2x4L8i0v7H8w9t+exiw4
Qje7Z9TnhcecTR5lSWWCpdHT4u2DXkiKDe3W5MsElrxa9vQHL+zoiW8Qm8mA
b92bY5kTXlhEK840eZQByWIvXZpWe+Oo7UyGun0G/M07t2cneuODq+9aFpvT
Yadvg+zPk96YvcONklaSDvrndks0n/NG9xmuOMfkdCieWsV/1cQbO8WVYsNI
S/OfastolIc35tKC71bKpkNTp2rW7yJvLE8X9LsanQZjd/Jvt1R6Y4gUpcQr
IA02Om9kx9z3xjerhUJr7dPAZd2v4N2PvfFyyypq+uk0kL5Wfv36Z29UeT25
bGlGAerEjs1t4j64+DBbfoj7LmgLr2fF032QYV6xd0z6DgicX31ogumDzr2H
95NX3YGesMVXJ9g+2PP+SK/GRAoYrRiR+nnXB5M2h4tr3E8B29/3yvXqfNC4
9/MVBf0UiHxr9ExozAeTv6rZ6kbdhv78FKHwi764hXuKI74tGZJHoqs+Gfri
n3cd0kf4kuG6DM1I1dQXv74/2+sxmwSjKQ5pX219sSZStv9MexLMR6ntO0X1
xcIMdrGeWxJIeny4sLLGF8sWr69IeJoIFhqyUYESfngn9vzIbGICjOyDGDMZ
P2QyegvuUxPAcqsxW13eD221pTKTnBPA+m9UAvdhPzyzZ/dc+qkEsL23cJeh
54cJrlUjfXPx4CzfVxYV5odmQjv3+5nFg58Iuffun6X4sdNiv4/FAfvT+/VN
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

          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPYOj5tTBi7/tDv5YGtNxbpp9pjTn6ZwWTQcY/+C/
N7zZLZZw/tuMQzVq073g/OqDG+12HAiG8/d/urkkXzQKzlf8cHPGocoEOJ/J
+M9C5XXJCH5I+T5j9XQ4X8n9Hi/vhCw4P7Ht13ybfblw/oOL2xf1ziiA8+ez
nRVbYVIE5+epRKgsP1EM5/tu7N/9t64Uzrd+oljyX7wczrdsS9gWcbkCzncX
FJ00ra0Kzk91Uumvl6mB8yc/ui964EotnH9B49ve1fn1cD5//p3y8mkNcL7t
vopY7sJGOL844dDlLzZNcL6h1SM+LqlmOP972vpbJS8QfNcO888XN7XA+dIP
p16I6muF83/2LLSzjG6D8+MLmgudLdvhfB8PhY/2wh1wvmNxFuOkewj+vqtd
1/h3d8L5zt0RNo87uuD8ANOH71YEdcP5T8Uc0mbp9sD5Td4+eQ9/IvjLt+tZ
h1zvhfMvl+2bIbOsD85v1+J0vl7QD+c/4hK9Gac2Ac5n1fpz408Pgv8mxW+3
wR8EX0zq3+HYzIlw/pEKlqmm5xF8s8+lHottJ8H5OuJ2R3YvQfDTtianneWc
DOen5H95VVKO4D+7dNv8+F0E32pj8YzHYlPg/N5+7p///RF8AH7rxEg=
          "]]}}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t,s\"", TraditionalForm], 
         FormBox["\"\[Theta]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
         Thickness[0.002], 13, "Times"], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       LabelStyle -> (FontFamily -> "Times"), 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None}, 
       PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Qa\"", "\"Qc\"", "\"Fixed\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"t,s\"","\"Q\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7046429743882847`*^9, 3.7046430007446413`*^9}, 
   3.704802619055181*^9, 3.704803250233513*^9}]
}, Open  ]]
},
WindowSize->{1469, 1235},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1206, 27, 80, "Input"],
Cell[1767, 49, 1789, 61, 171, "Input"],
Cell[3559, 112, 3042, 105, 271, "Input"],
Cell[6604, 219, 2395, 80, 256, "Input"],
Cell[9002, 301, 299, 10, 50, "Input"],
Cell[9304, 313, 1176, 38, 46, "Input"],
Cell[CellGroupData[{
Cell[10505, 355, 9953, 251, 257, "Input"],
Cell[20461, 608, 40071, 712, 383, "Output"],
Cell[60535, 1322, 52828, 938, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113400, 2265, 7817, 222, 274, "Input"],
Cell[121220, 2489, 38987, 695, 388, "Output"],
Cell[160210, 3186, 51547, 918, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211794, 4109, 7645, 219, 257, "Input"],
Cell[219442, 4330, 38200, 681, 385, "Output"],
Cell[257645, 5013, 52239, 929, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309921, 5947, 7642, 219, 257, "Input"],
Cell[317566, 6168, 38081, 680, 388, "Output"],
Cell[355650, 6850, 52390, 931, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408077, 7786, 7645, 219, 257, "Input"],
Cell[415725, 8007, 32781, 593, 388, "Output"],
Cell[448509, 8602, 49888, 891, 391, "Output"]
}, Open  ]],
Cell[498412, 9496, 99, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[498536, 9502, 7641, 219, 257, "Input"],
Cell[506180, 9723, 31151, 566, 388, "Output"],
Cell[537334, 10291, 51242, 912, 413, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
